{"version":3,"sources":["components/header.js","images/codingImage.png","components/card.js","images/codeForKids.png","images/webDev.png","images/uiManualTest.png","images/uiAutoTest.png","images/apiManualTest.png","images/apiAutoTest.png","components/cardList.js","components/cardDetails.js","components/socialIcon.js","components/footer.js","pages/landing.js","components/container/html.js","components/container/css.js","components/GoogleAd.js","components/code4kids/tabs/kidSystemconf.js","components/code4kids/tabs/kidBrowserconf.js","components/code4kids/tabs/kidMsoffice.js","images/tabs/code_kids.png","components/courses/tabs/coursesCode4Kids.js","components/courses/tabs/coursesWebDev.js","images/CourseOutline.png","components/courses/tabs/coursesAutomation.js","components/courses/tabs/coursesManual.js","pages/courses.js","components/code4kids/tabs/html.js","components/code4kids/tabs/css.js","components/code4kids/tabs/javascript.js","components/code4kids/tabs/reactjs.js","components/code4kids/tabs/webdevelopment.js","pages/code4Kids.js","images/tabs/manualLogo.png","images/tabs/defectBugError.png","images/tabs/bugLifeCycle.png","images/tabs/testPyramid.png","images/tabs/testPyramid1.png","components/resources/tabs/resManual.js","components/resources/tabs/resLinux.js","components/resources/tabs/resSql.js","components/resources/tabs/resNetwork.js","components/resources/tabs/resHtml.js","components/resources/tabs/resCss.js","components/resources/tabs/resJavascript.js","components/resources/tabs/resJava.js","components/resources/tabs/resSelenium.js","components/resources/tabs/resProtractor.js","components/resources/tabs/resWebIo.js","components/resources/tabs/resAppium.js","components/resources/tabs/resRestassured.js","components/resources/tabs/resLinks.js","pages/resources.js","images/about-pic.png","pages/about.js","pages/contact.js","components/practice/tabs/pracCode4Kids.js","components/practice/tabs/pracWebDevelopment.js","components/module/dtd.js","components/practice/tabs/pracAutomationTest.js","components/practice/tabs/pracManualTest.js","pages/practice.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["headerText","id","card","img","courseName","techStack","className","COURSES","cardList","cardDetails","href","target","rel","alt","src","codeForkids","width","height","webDev","uiManualTest","apiManualTest","uiAutoTest","apiAutoTest","socialIcon","class","title","fill","xmlns","viewBox","fill-rule","clip-rule","stroke-linejoin","stroke-miterlimit","d","ITNYCUSA","ITTCIWEBSITE","footer","size","type","Date","getFullYear","Landing","codingImage","Component","resHtml","css","GoogleAd","googleInit","timeout","this","props","setTimeout","window","adsbygoogle","push","clearTimeout","classNames","slot","style","display","data-ad-client","data-ad-slot","data-ad-format","data-full-width-responsive","defaultProps","kidSystemconf","col","kidBrowserconf","kidMsoffice","coursesCode4Kids","code_kids_pic","frameborder","allow","allowfullscreen","SystemConfig","BrowserConfig","MsOfficeConf","coursesWebDev","coursesAutomation","courseOutline","coursesManual","Courses","state","activeTab","onChange","tabId","setState","ripple","toggleCategories","html","javascript","reactjs","webdevelopment","Code4Kids","resManual","ManualLogo","DefectBugError","BugLifeCycle","TestPyramid","TestPyramid1","resLinux","resSql","resNetwork","utils","tag","comment","doctype","a","abbr","address","area","resCss","resJavascript","resJava","selenium","resProtractor","resWebIo","resAppium","resRestassured","resLinks","resources","About","aboutPic","Contact","raised","pracCode4Kids","pracWebDevelopment","dtd","placeholder","value","pracAutomationTest","pracManualTest","practice","Main","exact","path","component","Resources","Practice","App","fixedHeader","scroll","to","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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IX,GAAG,mBAAP,qBACA,8BAEJ,kBAAC,EAAD,CAAUQ,YAAcA,KAE5B,6BACI,kBAAC,EAAD,Y,GAxCEkC,aC6DPC,G,cAzEC,WACZ,OACI,yBAAKtC,UAAU,gBACX,mFAGA,4BACI,6CACI,4BACI,iDACA,6CACA,+CACA,2CACA,8CACA,+CACA,2CACA,wCACA,2CACA,mDACA,4CACA,uCACA,4CACA,+CACA,+CACA,2CACA,+CACA,iDACA,8CACA,gDACA,6CACA,4CACA,2CACA,4CACA,iDAGR,0CACI,4BACI,0CACA,mDACA,gDACA,qDACA,4DAGR,6CACI,4BACI,2CACA,0CAGR,0CACI,4BACI,0CACA,0CACA,0CACA,6CACA,8CAGR,wCACI,4BACI,gDACA,gDAGR,0CACA,+CACA,oDC2QDuC,EA/UH,WACR,OACI,yBAAKvC,UAAU,eACX,kFAGA,4BACI,2CACI,4BACI,gDACA,0CACA,6CACA,0CACA,4CACA,0CACA,8CACA,2CACA,2CACA,2CACA,kDACA,6CACA,2CACA,wCACA,yCACA,yCACA,yCACA,yCACA,0CACA,2CACA,6CACA,4CACA,4CACA,yCACA,gDACA,yCACA,+CACA,gDACA,kDACA,2CACA,kDACA,6CACA,iDACA,iDACA,kDACA,yCACA,4CACA,kDACA,yCACA,iDAGR,4CACI,4BACI,kDACA,iDACA,8CACA,0CACA,6CACA,2CACA,gDACA,6CACA,iDACA,iDACA,+CACA,8CACA,4CACA,gDACA,8CACA,2CACA,8CACA,oDACA,kDACA,6CACA,8CACA,2CACA,mDAGR,8CACI,4BACI,6CACA,gDACA,iDACA,qDACA,8CACA,8CACA,8CACA,+CAGR,wCACI,4BACI,8CACA,kDACA,+CAGR,iDACA,yCACA,+CACA,6BACA,6CACA,qCACI,4BACI,wCACA,yCACA,yCACA,oCACA,6CACA,2CACA,8CACA,0CACA,8CACA,iDACA,iDACA,2CACA,0CACA,6CACA,+CACA,kDACA,qDACA,+CACA,qDACA,kDACA,sDACA,6CACA,iDACA,qDACA,uDACA,wDACA,kDACA,sDACA,0CACA,uDACA,6CACA,+CACA,+CACA,oDACA,sCACA,yCACA,2CACA,4CACA,iDACA,mDACA,0CACA,6BACA,2CACA,6CACA,sDACA,iDACA,+CACA,mDAGR,sCACI,4BACI,yCACA,iDACA,4CACA,wCACA,qDACA,0CACA,2CACA,kDACA,kDACA,mDACA,kDACA,6CACA,qDACA,0CACA,iDACA,sDACA,6BACA,+CACA,6CACA,0CACA,qDACA,mDACA,8CACA,6CACA,iDACA,6CACA,0CACA,oDACA,6CACA,6CACA,8CACA,+CACA,iDACA,wDACA,0CACA,qDACA,yDAGR,uCACI,4BACI,6CACA,+CACA,6CACA,gDACA,8CACA,+CACA,oDACA,mDACA,+CACA,gDACA,4CACA,oDACA,4CACA,iDACA,kDACA,6CACA,4CACA,6CACA,sDAGR,qCACI,4BACI,0CACA,2CACA,6CACA,4CACA,iDACA,6CACA,8CACA,0CACA,4CACA,+CACA,0CACA,2CACA,gDACA,kDACA,sDACA,+CACA,6CACA,iDACA,qDACA,oDACA,qDACA,6CACA,6CACA,8CACA,gDACA,uDACA,mDACA,0DACA,kDACA,4CACA,oDACA,kDACA,wDAGR,uCACI,4BACI,2CACA,6CACA,+CACA,gDACA,yCACA,6CAGR,sCACI,4BACI,oDACA,6CACA,iDACA,mDAGR,uCACI,4BACI,gDACA,2CACA,4CACA,wCACA,gDACA,6CACA,yCACA,6CACA,wCACA,sDACA,qCACA,2CACA,wCACA,0CACA,uCACA,2CACA,2CACA,8CACA,6CACA,qCACA,yCACA,4CACA,4CACA,qCACA,uCACA,qCACA,sCACA,uCACA,sCACA,0CACA,oDACA,+CACA,2CACA,4CACA,4CACA,8CACA,4CACA,wCACA,iDACA,uCACA,iDACA,8CACA,6CACA,kDACA,6CACA,sDACA,6CACA,4CACA,kDACA,mDACA,gDACA,gDACA,0CACA,iDCpUlBwC,G,mNACJC,WAAa,K,kEAEQ,IACXC,EAAYC,KAAKC,MAAjBF,QACRC,KAAKF,WAAaI,YAAW,WACL,qBAAXC,SACRA,OAAOC,YAAcD,OAAOC,aAAe,IAAIC,KAAK,MACtDN,K,6CAICC,KAAKF,YAAYQ,aAAaN,KAAKF,c,+BAG/B,IAAD,EACsBE,KAAKC,MAA1BM,EADD,EACCA,WAAYC,EADb,EACaA,KACpB,OACE,yBAAKnD,UAAWkD,GACd,yBACElD,UAAU,cACVoD,MAAO,CAAEC,QAAS,SAClBC,iBAxBS,wBAyBTC,eAAcJ,EACdK,iBAAe,OACfC,6BAA2B,c,GAzBdpB,cAsCvBG,EAASkB,aAAe,CACtBR,WAAY,GACZR,QAAS,KAGIF,QCqDAmB,EAjGO,WAClB,OACI,yBAAK3D,UAAU,iBACX,kBAAC,OAAD,CAAMA,UAAU,iBACZ,kBAAC,OAAD,CAAMA,UAAU,qBAAqB4D,IAAK,IACtC,yBAAK5D,UAAU,mBACf,+EAGA,wBAAIA,UAAU,8BACV,oDACI,4BACI,uDACA,uFACA,sEACA,mEAER,wBAAIA,UAAU,OAAd,gCACI,4BACI,4FACA,kDACA,kDACA,kEAER,wBAAIA,UAAU,OAAd,2BACI,4BACI,yGACA,sEACA,4CACA,qEACA,+FACA,qGACA,gFAER,wBAAIA,UAAU,OAAd,0BACI,4BACI,yDACA,gFACA,8FAER,wBAAIA,UAAU,OAAd,6BACI,4BACI,wGAER,wBAAIA,UAAU,OAAd,sBACI,4BACI,sFACA,0DACA,yEACA,yCACA,sFAER,wBAAIA,UAAU,OAAd,2BACI,4BACI,yFACA,qDACA,iDACA,2CACA,0GACA,uEAER,wBAAIA,UAAU,OAAd,yCACI,4BACI,oDAER,wBAAIA,UAAU,OAAd,6BACI,4BACI,0DACA,6CACA,wCACA,8CACA,6CACA,mDACA,qCACA,qDACA,qCACA,sCACA,wDACA,wDAER,wBAAIA,UAAU,OAAd,+BACA,wBAAIA,UAAU,OAAd,gBACA,wBAAKA,UAAU,OAAf,WAKR,kBAAC,OAAD,CAAMA,UAAU,sBAAsB4D,IAAK,GACvC,kBAAC,EAAD,CAAUT,KAAK,aAAaD,WAAW,wBChB5CW,EAzEQ,WACnB,OACI,yBAAK7D,UAAU,iBACX,kBAAC,OAAD,CAAMA,UAAU,iBACZ,kBAAC,OAAD,CAAMA,UAAU,qBAAqB4D,IAAK,IACtC,yBAAK5D,UAAU,gCACX,6BACI,8EAGA,4BACI,mEACI,4BACI,iDACA,gDACA,mDAGR,wBAAIA,UAAU,OAAd,iCACI,4BACI,6CACA,+CACA,kDACA,6CACA,0CACA,mDAGR,wBAAIA,UAAU,OAAd,8BACI,4BACI,+CACA,wDACA,2DACA,6DACA,uEAGR,wBAAIA,UAAU,OAAd,2CACI,4BACI,uDACA,gDACA,qDAGR,wBAAIA,UAAU,OAAd,4BACI,4BACI,oDACA,4CACA,qDAGR,wBAAIA,UAAU,OAAd,oBACI,4BACI,8CACA,kDACA,sDACA,2CACA,2CAGR,wBAAIA,UAAU,OAAd,gBACA,wBAAIA,UAAU,OAAd,YAKhB,kBAAC,OAAD,CAAMA,UAAU,sBAAsB4D,IAAK,GACvC,kBAAC,EAAD,CAAUT,KAAK,aAAaD,WAAW,wBC6C5CY,EAhHK,WAChB,OACI,yBAAK9D,UAAU,iBACX,kBAAC,OAAD,CAAMA,UAAU,iBACZ,kBAAC,OAAD,CAAMA,UAAU,qBAAqB4D,IAAK,IACtC,yBAAK5D,UAAU,8BACX,6BACI,8EACA,4BACI,6DACI,4BACI,qDACA,uDACA,uDACA,uDACA,2DACA,wDACA,uDACA,qDACA,6DACA,yDACA,uDACA,uDAGR,wBAAIA,UAAU,OAAd,mCACI,4BACI,qDACA,uDACA,4DACA,yDACA,qDACA,uDACA,qDACA,yDACA,uDACA,uDAGR,wBAAIA,UAAU,OAAd,wCACI,4BACI,uDACA,yDACA,yDACA,8DACA,6DACA,6DACA,yDACA,uDACA,2DACA,yDACA,yDAGR,wBAAIA,UAAU,OAAd,sBACI,4BACI,0DACA,0DACA,uDACA,wDACA,uDACA,2DACA,wDACA,wDACA,2DACA,qDACA,qDACA,sDACA,4DACA,2DACA,0DACA,6DACA,6DACA,+DACA,4DACA,uDACA,uDAIR,wBAAIA,UAAU,OAAd,sBACI,4BACI,qDACA,uDACA,qDACA,qDACA,uDACA,uDAGR,wBAAIA,UAAU,OAAd,uBACI,4BACI,kEACA,oEACA,sEACA,yDACA,yDAGR,w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","file":"static/js/main.90b9a68a.chunk.js","sourcesContent":["import React from 'react';\nimport '../style/header.css'\n\nconst headerText = () => {\n    return(\n        <div>\n            <h1 id='htext'>Nothing to lose by learning new skill!</h1>\n        </div>\n    );\n  }   \nexport default headerText;","export default __webpack_public_path__ + \"static/media/codingImage.2219e51c.png\";","import React from 'react';\nimport '../style/card.css';\n\nconst card = ({img, courseName, techStack}) => {\n    return(\n        <div className = 'tc dib br-100 pa2 ma2 grow bw2'>\n            <div className='img-style'>\n                {img}\n            </div>\n            <div className='course-details'>\n                <h4><strong>{courseName}</strong></h4>\n                <p>{techStack}</p>\n            </div>\n        </div>\n    );\n  }   \nexport default card;\n","export default __webpack_public_path__ + \"static/media/codeForKids.d0058eb3.png\";","export default __webpack_public_path__ + \"static/media/webDev.3307fb6e.png\";","export default __webpack_public_path__ + \"static/media/uiManualTest.653deb53.png\";","export default __webpack_public_path__ + \"static/media/uiAutoTest.e4a185de.png\";","export default __webpack_public_path__ + \"static/media/apiManualTest.d45aa971.png\";","export default __webpack_public_path__ + \"static/media/apiAutoTest.4170e923.png\";","import React from 'react'\nimport Card from '../components/card';\nimport codeForkids from '../images/codeForKids.png';\nimport webDev from '../images/webDev.png';\nimport uiManualTest from '../images/uiManualTest.png';\nimport uiAutoTest from '../images/uiAutoTest.png';\nimport apiManualTest from '../images/apiManualTest.png';\nimport apiAutoTest from '../images/apiAutoTest.png';\n\nconst COURSES = '/ittciwebsite/courses/';\n\nconst cardList = ({cardDetails}) => {\n    return(\n        <div>\n            <Card img={<a href={COURSES} target=\"_blank\" rel=\"noopener noreferrer\"><img alt='codeForkids' src={codeForkids} width='200' height='200'/></a>} id={cardDetails[4].id} courseName={cardDetails[4].courseName} techStack={cardDetails[4].techStack}/>\n            <Card img={<a href={COURSES} target=\"_blank\" rel=\"noopener noreferrer\"><img alt='webDev' src={webDev} width='200' height='200'/></a>} id={cardDetails[5].id} courseName={cardDetails[5].courseName} techStack={cardDetails[5].techStack}/>\n            <Card img={<a href={COURSES} target=\"_blank\" rel=\"noopener noreferrer\"><img alt='uiManualTest' src={uiManualTest} width='200' height='200'/></a>} id={cardDetails[0].id} courseName={cardDetails[0].courseName} techStack={cardDetails[0].techStack}/>\n            <Card img={<a href={COURSES} target=\"_blank\" rel=\"noopener noreferrer\"><img alt='apiManualTest' src={apiManualTest} width='200' height='200'/></a>} id={cardDetails[1].id} courseName={cardDetails[1].courseName} techStack={cardDetails[1].techStack}/>\n            <Card img={<a href={COURSES} target=\"_blank\" rel=\"noopener noreferrer\"><img alt='uiAutoTest' src={uiAutoTest} width='200' height='200'/></a>} id={cardDetails[2].id} courseName={cardDetails[2].courseName} techStack={cardDetails[2].techStack}/>\n            <Card img={<a href={COURSES} target=\"_blank\" rel=\"noopener noreferrer\"><img alt='apiAutoTest' src={apiAutoTest} width='200' height='200'/></a>} id={cardDetails[3].id} courseName={cardDetails[3].courseName} techStack={cardDetails[3].techStack}/>\n        </div> \n    );\n}\nexport default cardList;\n\n\n\n\n","export const cardDetails = [\n    {\n        id: 1,\n        courseName: ' Frontend(UI) Manual Test',\n        techStack: 'SDLC, STLC, TC, TC Management, SQL, JIRA'\n        \n    },\n    {\n        id: 2,\n        courseName: 'Backend(API) Manual Test',\n        techStack: 'Xray, POSTMAN, GRPC, HTTP Client, RESTful, SQL'\n        \n    },\n    {\n        id: 3,\n        courseName: 'Frontend(UI) Automation Test',\n        techStack: 'Selenium, Protractor, Appium, WebDriverIO, Java, Javascript, NodeJS'\n    },\n    {\n        id: 4,\n        courseName: 'Backend(API) Automation Test',\n        techStack: 'Java, Javascript, NodeJS, RestAssured, SuperTest'\n    },\n    {\n        id: 5,\n        courseName: 'Code4Kids',\n        techStack: 'HTML, CSS, Javascript, NodeJS, ReactJS'\n    },\n    {\n        id: 6,\n        courseName: 'Web Development',\n        techStack: 'HTML, CSS, Javascript, NodeJS, ReactJS'\n    }\n]","import React from 'react';\n\nconst FACEBOOK = 'https://www.facebook.com/zaman5213/';\nconst GITHUB = 'https://github.com/msz5213/';\nconst INSTRAGRAM = 'https://www.instagram.com/itnycusa/';\nconst YOUTUBE = 'https://www.youtube.com/channel/UCITyGuyGv5OzornDpgVBnDg?view_as=subscriber/';\nconst SLACK = 'https://itnycusa.slack.com/';\nconst LINKEDIN = 'https://www.linkedin.com/in/zamanmd/';\n\nconst FACEBOOK_IMAGE = 'http://www.w3.org/2000/svg';\nconst GITHUB_IMAGE = 'http://www.w3.org/2000/svg';\nconst INSTRAGRAM_IMAGE = 'http://www.w3.org/2000/svg';\nconst YOUTUBE_IMAGE = 'http://www.w3.org/2000/svg';\nconst SLACK_IMAGE = 'http://www.w3.org/2000/svg';\nconst LINKEDIN_IMAGE = 'http://www.w3.org/2000/svg';\n\nconst socialIcon = () => {\n    return(\n        <div className='social-icon-body tc'>\n            <a class=\"link near-black hover-silver dib mh3 tc\" href={FACEBOOK} title=\"Facebook\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <svg class=\"dib h2 w2\" fill=\"currentColor\" xmlns={FACEBOOK_IMAGE} viewBox=\"0 0 16 16\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.414\"><path d=\"M15.117 0H.883C.395 0 0 .395 0 .883v14.234c0 .488.395.883.883.883h7.663V9.804H6.46V7.39h2.086V5.607c0-2.066 1.262-3.19 3.106-3.19.883 0 1.642.064 1.863.094v2.16h-1.28c-1 0-1.195.476-1.195 1.176v1.54h2.39l-.31 2.416h-2.08V16h4.077c.488 0 .883-.395.883-.883V.883C16 .395 15.605 0 15.117 0\" fill-rule=\"nonzero\"/></svg>\n                <span class=\"f6 db\">Facebook</span>\n            </a>\n            <a class=\"link near-black hover-silver dib mh3 tc\" href={GITHUB} title=\"GitHub\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <svg class=\"dib h2 w2\" fill=\"currentColor\" xmlns={GITHUB_IMAGE} viewBox=\"0 0 16 16\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.414\"><path d=\"M8 0C3.58 0 0 3.582 0 8c0 3.535 2.292 6.533 5.47 7.59.4.075.547-.172.547-.385 0-.19-.007-.693-.01-1.36-2.226.483-2.695-1.073-2.695-1.073-.364-.924-.89-1.17-.89-1.17-.725-.496.056-.486.056-.486.803.056 1.225.824 1.225.824.714 1.223 1.873.87 2.33.665.072-.517.278-.87.507-1.07-1.777-.2-3.644-.888-3.644-3.953 0-.873.31-1.587.823-2.147-.083-.202-.358-1.015.077-2.117 0 0 .672-.215 2.2.82.638-.178 1.323-.266 2.003-.27.68.004 1.364.092 2.003.27 1.527-1.035 2.198-.82 2.198-.82.437 1.102.163 1.915.08 2.117.513.56.823 1.274.823 2.147 0 3.073-1.87 3.75-3.653 3.947.287.246.543.735.543 1.48 0 1.07-.01 1.933-.01 2.195 0 .215.144.463.55.385C13.71 14.53 16 11.534 16 8c0-4.418-3.582-8-8-8\"/></svg>\n                <span class=\"f6 db\">GitHub</span>\n            </a>\n            <a class=\"link hover-silver near-black dib mh3 tc\" href={INSTRAGRAM} title=\"Instagram\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <svg class=\"dib h2 w2\" fill=\"currentColor\" xmlns={INSTRAGRAM_IMAGE} viewBox=\"0 0 16 16\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.414\"><path d=\"M8 0C5.827 0 5.555.01 4.702.048 3.85.088 3.27.222 2.76.42c-.526.204-.973.478-1.417.923-.445.444-.72.89-.923 1.417-.198.51-.333 1.09-.372 1.942C.008 5.555 0 5.827 0 8s.01 2.445.048 3.298c.04.852.174 1.433.372 1.942.204.526.478.973.923 1.417.444.445.89.72 1.417.923.51.198 1.09.333 1.942.372.853.04 1.125.048 3.298.048s2.445-.01 3.298-.048c.852-.04 1.433-.174 1.942-.372.526-.204.973-.478 1.417-.923.445-.444.72-.89.923-1.417.198-.51.333-1.09.372-1.942.04-.853.048-1.125.048-3.298s-.01-2.445-.048-3.298c-.04-.852-.174-1.433-.372-1.942-.204-.526-.478-.973-.923-1.417-.444-.445-.89-.72-1.417-.923-.51-.198-1.09-.333-1.942-.372C10.445.008 10.173 0 8 0zm0 1.44c2.136 0 2.39.01 3.233.048.78.036 1.203.166 1.485.276.374.145.64.318.92.598.28.28.453.546.598.92.11.282.24.705.276 1.485.038.844.047 1.097.047 3.233s-.01 2.39-.048 3.233c-.036.78-.166 1.203-.276 1.485-.145.374-.318.64-.598.92-.28.28-.546.453-.92.598-.282.11-.705.24-1.485.276-.844.038-1.097.047-3.233.047s-2.39-.01-3.233-.048c-.78-.036-1.203-.166-1.485-.276-.374-.145-.64-.318-.92-.598-.28-.28-.453-.546-.598-.92-.11-.282-.24-.705-.276-1.485C1.45 10.39 1.44 10.136 1.44 8s.01-2.39.048-3.233c.036-.78.166-1.203.276-1.485.145-.374.318-.64.598-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276C5.61 1.45 5.864 1.44 8 1.44zm0 2.452c-2.27 0-4.108 1.84-4.108 4.108 0 2.27 1.84 4.108 4.108 4.108 2.27 0 4.108-1.84 4.108-4.108 0-2.27-1.84-4.108-4.108-4.108zm0 6.775c-1.473 0-2.667-1.194-2.667-2.667 0-1.473 1.194-2.667 2.667-2.667 1.473 0 2.667 1.194 2.667 2.667 0 1.473-1.194 2.667-2.667 2.667zm5.23-6.937c0 .53-.43.96-.96.96s-.96-.43-.96-.96.43-.96.96-.96.96.43.96.96z\"/></svg>\n                <span class=\"f6 db\">Instagram</span>\n            </a>\n            <a class=\"link hover-silver near-black dib mh3 tc\" href={YOUTUBE} title=\"youtube\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <svg class=\"dib w2 h2\" xmlns={YOUTUBE_IMAGE} viewBox=\"0 0 16 16\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.414\"><path d=\"M0 7.345c0-1.294.16-2.59.16-2.59s.156-1.1.636-1.587c.608-.637 1.408-.617 1.764-.684C3.84 2.36 8 2.324 8 2.324s3.362.004 5.6.166c.314.038.996.04 1.604.678.48.486.636 1.588.636 1.588S16 6.05 16 7.346v1.258c0 1.296-.16 2.59-.16 2.59s-.156 1.102-.636 1.588c-.608.638-1.29.64-1.604.678-2.238.162-5.6.166-5.6.166s-4.16-.037-5.44-.16c-.356-.067-1.156-.047-1.764-.684-.48-.487-.636-1.587-.636-1.587S0 9.9 0 8.605v-1.26zm6.348 2.73V5.58l4.323 2.255-4.32 2.24h-.002z\"/></svg>\n                <span class=\"f6 db\">Youtube</span>\n            </a>\n            <a class=\"link hover-silver near-black dib mh3 tc\" href={SLACK} title=\"Slack\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <svg class=\"dib h2 w2\" fill=\"currentColor\" xmlns={SLACK_IMAGE} viewBox=\"0 0 16 16\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.414\"><g fill-rule=\"nonzero\"><path d=\"M6.586 7.33l.69 2.057 2.137-.716-.69-2.056-2.137.716z\"/><path d=\"M12.55 9.37l-1.037.347.36 1.073c.145.434-.09.904-.524 1.05-.096.03-.19.045-.287.042-.338-.01-.65-.226-.765-.566l-.36-1.072-2.138.716.36 1.072c.145.435-.09.905-.523 1.05-.096.032-.192.045-.286.043-.34-.01-.65-.226-.764-.566l-.36-1.075-1.037.348c-.096.03-.19.045-.286.042-.34-.008-.65-.226-.765-.565-.146-.434.09-.904.522-1.05L5.7 9.914l-.69-2.058-1.037.347c-.094.032-.19.045-.285.043-.338-.01-.65-.226-.765-.566-.145-.434.09-.904.523-1.05l1.037-.347-.36-1.073c-.145-.434.09-.904.524-1.05.435-.145.905.09 1.05.524l.36 1.072 2.137-.716-.36-1.072c-.144-.435.09-.905.524-1.05.435-.145.906.09 1.05.523l.36 1.075 1.037-.347c.434-.146.904.088 1.05.522.145.434-.09.904-.523 1.05l-1.037.347.69 2.057 1.036-.347c.435-.145.905.09 1.05.523.146.434-.09.904-.522 1.05zm2.78-3.57C13.68.304 11.298-.98 5.8.67.304 2.32-.98 4.7.67 10.2c1.65 5.497 4.03 6.78 9.53 5.13 5.497-1.65 6.78-4.03 5.13-9.53z\"/></g></svg>\n                <span class=\"f6 db\">Slack</span>\n            </a>\n            <a class=\"link hover-silver near-black dib mh3 tc\" href={LINKEDIN} title=\"LinkedIn\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <svg class=\"dib h2 w2\" fill=\"currentColor\" xmlns={LINKEDIN_IMAGE} viewBox=\"0 0 16 16\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.414\"><path d=\"M13.632 13.635h-2.37V9.922c0-.886-.018-2.025-1.234-2.025-1.235 0-1.424.964-1.424 1.96v3.778h-2.37V6H8.51V7.04h.03c.318-.6 1.092-1.233 2.247-1.233 2.4 0 2.845 1.58 2.845 3.637v4.188zM3.558 4.955c-.762 0-1.376-.617-1.376-1.377 0-.758.614-1.375 1.376-1.375.76 0 1.376.617 1.376 1.375 0 .76-.617 1.377-1.376 1.377zm1.188 8.68H2.37V6h2.376v7.635zM14.816 0H1.18C.528 0 0 .516 0 1.153v13.694C0 15.484.528 16 1.18 16h13.635c.652 0 1.185-.516 1.185-1.153V1.153C16 .516 15.467 0 14.815 0z\" fill-rule=\"nonzero\"/></svg>\n                <span class=\"f6 db\">LinkedIn</span>\n            </a>\n        </div>\n    );\n  }   \nexport default socialIcon;\n","import React from 'react';\nimport '../style/footer.css';\nimport SocialIcon from '../components/socialIcon';\nimport {Footer, FooterSection, FooterDropDownSection, FooterLinkList} from 'react-mdl';\n\nconst ITNYCUSA = 'http://itnycusa.com/';\nconst HEROKUAPP = 'http://the-internet.herokuapp.com/';\nconst ZAMAN_PORTFOLIO = 'https://msz5213.github.io/mdzamanportfolio/';\nconst JSON_API_WEBSITE = 'http://jsonplaceholder.typicode.com/';\nconst REQRES_WEBSITE = 'https://reqres.in/';\nconst QUESTIONS = 'https://www.facebook.com/itnycusa/';\nconst ANSWERE = 'https://www.linkedin.com/company/52147964/';\n\nconst ITTCIWEBSITE = '/ittciwebsite/';\nconst HOW_IT_WORKS = '/ittciwebsite/courses/';\nconst ABOUT = '/ittciwebsite/about/';\nconst SERVICES = 'https://msz5213.github.io/student-subscription/';\nconst CONTACT = '/ittciwebsite/contact/';\n\nconst footer = () => {\n    return(\n        <Footer size=\"mega\">\n            <FooterSection type=\"middle\">\n                <FooterDropDownSection title=\"Features\">\n                    <FooterLinkList>\n                        <a href={ITNYCUSA} target=\"_blank\" rel=\"noopener noreferrer\">WordPress Website</a>\n                        <a href={HEROKUAPP} target=\"_blank\" rel=\"noopener noreferrer\">Internet Website</a>\n                        <a href={REQRES_WEBSITE} target=\"_blank\" rel=\"noopener noreferrer\">ReqRes Website</a>\n                        <a href={ZAMAN_PORTFOLIO} target=\"_blank\" rel=\"noopener noreferrer\">Md's Portfolio</a>\n                        <a href={JSON_API_WEBSITE} target=\"_blank\" rel=\"noopener noreferrer\">JL Website</a>\n                    </FooterLinkList>\n                </FooterDropDownSection>\n                <FooterDropDownSection title=\"Details\">\n                    <FooterLinkList>\n                        <a href={ITTCIWEBSITE} target=\"_blank\" rel=\"noopener noreferrer\">UI Automation</a>\n                        <a href={ITTCIWEBSITE} target=\"_blank\" rel=\"noopener noreferrer\">API Automation</a>\n                        <a href={ITTCIWEBSITE} target=\"_blank\" rel=\"noopener noreferrer\">UI Manual</a>\n                        <a href={ITTCIWEBSITE} target=\"_blank\" rel=\"noopener noreferrer\">API Manual</a>\n                        \n                    </FooterLinkList>\n                </FooterDropDownSection>\n                <FooterDropDownSection title=\"Technology\">\n                    <FooterLinkList>\n                        <a href={HOW_IT_WORKS} target=\"_blank\" rel=\"noopener noreferrer\">How it works</a>\n                        <a href={SERVICES} target=\"_blank\" rel=\"noopener noreferrer\">Services</a>\n                        <a href={ABOUT} target=\"_blank\" rel=\"noopener noreferrer\">About</a> \n                    </FooterLinkList>\n                </FooterDropDownSection>\n                <FooterDropDownSection title=\"FAQ\">\n                    <FooterLinkList>\n                        <a href={QUESTIONS} target=\"_blank\" rel=\"noopener noreferrer\">Questions</a>\n                        <a href={ANSWERE} target=\"_blank\" rel=\"noopener noreferrer\">Answers</a>\n                        <a href={CONTACT} target=\"_blank\" rel=\"noopener noreferrer\">Contact Us</a>\n                    </FooterLinkList>\n                </FooterDropDownSection>\n            </FooterSection>\n            \n                <div className='social-icon mt4'>\n                <SocialIcon />\n                    <p className='all-right f7 white-70 mt4 tc copyIcon'>\n                        Copyright  &copy; {new Date().getFullYear()}\n                        <a href={ITNYCUSA} target=\"_blank\" rel=\"noopener noreferrer\"> IT Training & Consultant Inc., </a> \n                        All Rights Reserved\n                    </p>\n                </div>\n        </Footer>\n    );\n}\nexport default footer;","import React, {Component} from 'react';\nimport HeaderText from '../components/header';\nimport '../style/landing.css';\nimport codingImage from '../images/codingImage.png'\nimport CardList from '../components/cardList';\nimport {cardDetails}from '../components/cardDetails';\nimport Footer from '../components/footer';\n\nconst googleMeet = 'https://meet.google.com/wco-zfnf-swy';\nconst ZoomMeeting = 'https://us04web.zoom.us/j/4110977526?pwd=TnRkbDNud202Z0U1Z3NKT1RHcmQ4UT09';\nconst studentSubscription = 'https://msz5213.github.io/student-subscription/';\nconst code4KidsSignUp = 'https://mailchi.mp/351449e3a71f/sqabdtraining';\nconst bdSignUp = 'https://mailchi.mp/351449e3a71f/sqabdtraining';\n\nclass Landing extends Component {\n    render(){\n        return(\n            <div className='tc'>\n                <div className='landing-body'> \n                    <HeaderText />\n                    <h3>\n                        Welcome to Tech Training Programs Center!\n                    </h3>\n                </div>\n                <div>\n                    <div>\n                        <p>New batch starting every after week. Code4Kids | Web Developement & SQA Training Courses | Get in Touch with +1.917.561.6554</p>\n                    </div>\n                    <div className='goLink container ph3 mt4'>\n                        <a class='f6 grow no-underline br-pill ba bw1 ph3 pv2 mb2 dib dark-green' href={googleMeet} target=\"_blank\" rel=\"noopener noreferrer\">\n                            ITTCI Classroom\n                        </a>\n                        <a class='f6 grow no-underline br-pill ba bw1 ph3 pv2 mb2 dib dark-green' href={ZoomMeeting} target=\"_blank\" rel=\"noopener noreferrer\">\n                            Zoom Classroom\n                        </a>\n                        <img alt='cover' className=\"cover-img\" src={codingImage}/>\n\n                        <a class='f6 grow no-underline br-pill ba bw1 ph3 pv2 mb2 dib dark-green' href={studentSubscription} target=\"_blank\" rel=\"noopener noreferrer\">\n                            SignUp Now\n                        </a>\n                        <a class='f6 grow no-underline br-pill ba bw1 ph3 pv2 mb2 dib dark-green' href={bdSignUp} target=\"_blank\" rel=\"noopener noreferrer\">\n                            BD SignUp\n                        </a>\n                        <a class='f6 grow no-underline br-pill ba bw1 ph3 pv2 mb2 dib dark-green' href={code4KidsSignUp} target=\"_blank\" rel=\"noopener noreferrer\">\n                            Code4Kids SignUp\n                        </a>\n                    </div>\n                    <div>\n                        <h3 id='program-heading'>Training Programs</h3>\n                        <hr />\n                    </div>\n                    <CardList cardDetails= {cardDetails}/>\n                </div>\n                <div>\n                    <Footer />\n                </div>\n            </div>\n\n        )\n    } \n}\nexport default Landing;\n","import React from 'react';\n\nconst resHtml = () => {\n    return(\n        <div className='html-section'>\n            <h6>\n                -Basic & Advance HTML Development - course outline-\n            </h6>\n            <ol>\n                <li> HTML5 Basics:\n                    <ol>\n                        <li>HTML Introduction</li>\n                        <li>HTML Elements</li>\n                        <li>HTML Attributes</li>\n                        <li>HTML Styles</li>\n                        <li>HTML Formating</li>\n                        <li>HTML Quotations</li>\n                        <li>HTML Colors</li>\n                        <li>HTML CSS</li>\n                        <li>HTML Tables</li>\n                        <li>HTML Block & Inline</li>\n                        <li>HTML Classes</li>\n                        <li>HTML Id</li>\n                        <li>HTML Iframes</li>\n                        <li>HTML Javascript</li>\n                        <li>HTML File Paths</li>\n                        <li>HTML Layout</li>\n                        <li>HTML Responsive</li>\n                        <li>HTML Computercode</li>\n                        <li>HTML Semantics</li>\n                        <li>HTML Style Guide</li>\n                        <li>HTML Entities</li>\n                        <li>HTML Symbols</li>\n                        <li>HTML Emojis</li>\n                        <li>HTML Charset</li>\n                        <li>HTML URL Encode</li>\n                    </ol>\n                </li>\n                <li> HTML Forms\n                    <ol>\n                        <li>HTML Forms</li>\n                        <li>HTML Forms Elements</li>\n                        <li>HTML Input Types</li>\n                        <li>HTML Input Attributes</li>\n                        <li>HTML Input Form Attributes</li>\n                    </ol>\n                </li>\n                <li> HTML Graphics\n                    <ol>\n                        <li>HTML Canvas</li>\n                        <li>HTML SVG</li>\n                    </ol>\n                </li>\n                <li> HTML Media\n                    <ol>\n                        <li>HTML Media</li>\n                        <li>HTML Video</li>\n                        <li>HTML Audio</li>\n                        <li>HTML Plug-ins</li>\n                        <li>HTML YouTube</li>\n                    </ol>\n                </li>\n                <li>HTML APIs\n                    <ol>\n                        <li>HTML Geolocation</li>\n                        <li>HTML Drag/Drop</li>\n                    </ol>\n                </li>\n                <li> HTML Quiz</li>\n                <li> HTML Exercises</li>\n                <li> HTML Final Exam</li>\n            </ol>\n        </div>\n    )\n}\nexport default resHtml;\n","import React from 'react';\n\nconst css = () => {\n    return(\n        <div className='css-section'>\n            <h6>\n                -Basic & Advance CSS Development - course outline-\n            </h6>\n            <ol>\n                <li> CSS Basics:\n                    <ol>\n                        <li>CSS Introduction</li>\n                        <li>CSS Syntex</li>\n                        <li>CSS Selectors</li>\n                        <li>CSS How To</li>\n                        <li>CSS Comments</li>\n                        <li>CSS Colors</li>\n                        <li>CSS Backrounds</li>\n                        <li>CSS Borders</li>\n                        <li>CSS Margins</li>\n                        <li>CSS Padding</li>\n                        <li>CSS Height & Width</li>\n                        <li>CSS Box Model</li>\n                        <li>CSS Outline</li>\n                        <li>CSS Text</li>\n                        <li>CSS Fonts</li>\n                        <li>CSS Icons</li>\n                        <li>CSS Links</li>\n                        <li>CSS Lists</li>\n                        <li>CSS Tables</li>\n                        <li>CSS Display</li>\n                        <li>CSS Max-Width</li>\n                        <li>CSS Position</li>\n                        <li>CSS Overflow</li>\n                        <li>CSS Float</li>\n                        <li>CSS Inline-block</li>\n                        <li>CSS Align</li>\n                        <li>CSS Combinators</li>\n                        <li>CSS Pseudo-class</li>\n                        <li>CSS Pseudo-element</li>\n                        <li>CSS Opacity</li>\n                        <li>CSS Navigation Bar</li>\n                        <li>CSS Dropdowns</li>\n                        <li>CSS Image Gallery</li>\n                        <li>CSS Image Sprites</li>\n                        <li>CSS Attr Selectors</li>\n                        <li>CSS Forms</li>\n                        <li>CSS Counters</li>\n                        <li>CSS Website Layout</li>\n                        <li>CSS Units</li>\n                        <li>CSS Specificity</li>\n                    </ol>\n                </li>\n                <li> CSS Advance:\n                    <ol>\n                        <li>CSS Rounded Corner</li>\n                        <li>CSS Border Images</li>\n                        <li>CSS Backrounds</li>\n                        <li>CSS Colors</li>\n                        <li>CSS Gradients</li>\n                        <li>CSS Shadows</li>\n                        <li>CSS Text Effects</li>\n                        <li>CSS Web Fonts</li>\n                        <li>CSS 2D Transforms</li>\n                        <li>CSS 3D Transforms</li>\n                        <li>CSS Transitions</li>\n                        <li>CSS Animations</li>\n                        <li>CSS Tooltips</li>\n                        <li>CSS Style Images</li>\n                        <li>CSS object-fit</li>\n                        <li>CSS Buttons</li>\n                        <li>CSS Pagination</li>\n                        <li>CSS Multiple Columns</li>\n                        <li>CSS User Interface</li>\n                        <li>CSS Variables</li>\n                        <li>CSS Box Sizing</li>\n                        <li>CSS Flexbox</li>\n                        <li>CSS Media Queries</li>\n                    </ol>\n                </li>\n                <li> CSS Responsive\n                    <ol>\n                        <li>CSS RWD Intro</li>\n                        <li>CSS RWD Viewport</li>\n                        <li>CSS RWD Grid View</li>\n                        <li>CSS RWD Media Queries</li>\n                        <li>CSS RWD Images</li>\n                        <li>CSS RWD Videos</li>\n                        <li>CSS Frameworks</li>\n                        <li>CSS Templates</li>\n                    </ol>\n                </li>\n                <li> CSS Grid\n                    <ol>\n                        <li>CSS Grid Intro</li>\n                        <li>CSS Grid Container</li>\n                        <li>CSS Grid Item</li>\n                    </ol>\n                </li>\n                <li> CSS Final Review</li>\n                <li> CSS Quiz</li>\n                <li> CSS Final Exam</li>\n                <hr/>\n                <h5>CSS How To...</h5>\n                <li> Menus\n                    <ol>\n                        <li>Icon Bar</li>\n                        <li>Menu Icon</li>\n                        <li>Accordion</li>\n                        <li>Tabs</li>\n                        <li>Vertical Tabs</li>\n                        <li>Tab Headers</li>\n                        <li>Full Page Tabs</li>\n                        <li>Hover Tabs</li>\n                        <li>Top Navigation</li>\n                        <li>Responsive Topnav</li>\n                        <li>Navbar with Icons</li>\n                        <li>Search Menu</li>\n                        <li>Search Bar</li>\n                        <li>Fixed Sidebar</li>\n                        <li>Side Navigation</li>\n                        <li>Responsive Sidebar</li>\n                        <li>Fullscreen Navigation</li>\n                        <li>Off-Canvas Menu</li>\n                        <li>Hover Sidenav Buttons</li>\n                        <li>Sidebar with Icons</li>\n                        <li>Horizontal Scroll Menu</li>\n                        <li>Vertical Menu</li>\n                        <li>Buttom Navigation</li>\n                        <li>Responsive Buttom Nav</li>\n                        <li>Bottom Border Nav Links</li>\n                        <li>Right Aligned Menu Links</li>\n                        <li>Centered Menu Link</li>\n                        <li>Equal Width Menu Links</li>\n                        <li>Fixed Menu</li>\n                        <li>Side Down Bar on Scroll</li>\n                        <li>Sticky Navbar</li>\n                        <li>Navbar on Image</li>\n                        <li>Hover Dropdowns</li>\n                        <li>Side Navigation Menu</li>\n                        <li>Dropup</li>\n                        <li>Mega Menu</li>\n                        <li>Mobile Menu</li>\n                        <li>Curtain Menu</li>\n                        <li>Collapsed Sidebar</li>\n                        <li>Collapsed Sidepanel</li>\n                        <li>Pagination</li>\n                        <li></li>\n                        <li>Breadcrumbs</li>\n                        <li>Button Groups</li>\n                        <li>Vertical Buttons Group</li>\n                        <li>Sticky Social Bar</li>\n                        <li>Pill Navigation</li>\n                        <li>Responsive Header</li>\n                    </ol>\n                </li>  \n                <li> Images\n                    <ol>\n                        <li>SlideShow</li>\n                        <li>Slideshow Gallery</li>\n                        <li>Model Images</li>\n                        <li>Lightbox</li>\n                        <li>Responsive Image Grid</li>\n                        <li>Image Grid</li>\n                        <li>Tab Gallery</li>\n                        <li>Image Overlay Fade</li>\n                        <li>Image Overlay Zoom</li>\n                        <li>Image Overlay Title</li>\n                        <li>Image Overlay Icon</li>\n                        <li>Image Effects</li>\n                        <li>Black and White Image</li>\n                        <li>Image Text</li>\n                        <li>Image Text Blocks</li>\n                        <li>Iransparent Image Text</li>\n                        <li></li>\n                        <li>Full Page Image</li>\n                        <li>Form on Image</li>\n                        <li>Hero Image</li>\n                        <li>Blur Backrounds Image</li>\n                        <li>Side by Side Images</li>\n                        <li>Rounded Images</li>\n                        <li>Avater Images</li>\n                        <li>Responsive Images</li>\n                        <li>Center Images</li>\n                        <li>Thumbnails</li>\n                        <li>Border Around Images</li>\n                        <li>Meet the Team</li>\n                        <li>Sticky Images</li>\n                        <li>Flip on Images</li>\n                        <li>Shake on Images</li>\n                        <li>Portfolio Gallery</li>\n                        <li>Portfolio with Filtering</li>\n                        <li>Image Zoom</li>\n                        <li>Image Magnifier Glass</li>\n                        <li>Image Comparison Slider</li>\n                    </ol>\n                </li>\n                <li> Buttons\n                    <ol>\n                        <li>Alert Buttons</li>\n                        <li>Outline Buttons</li>\n                        <li>Split Buttons</li>\n                        <li>Animated Buttons</li>\n                        <li>Fading Buttons</li>\n                        <li>Button on Image</li>\n                        <li>Social Media Buttons</li>\n                        <li>Read More Read Less</li>\n                        <li>Loading Buttons</li>\n                        <li>Download Buttons</li>\n                        <li>Pill Buttons</li>\n                        <li>Notification Buttons</li>\n                        <li>Icon Buttons</li>\n                        <li>Next Prev Buttons</li>\n                        <li>More Button in Nav</li>\n                        <li>Block Buttons</li>\n                        <li>Text Buttons</li>\n                        <li>Round Buttons</li>\n                        <li>Scroll to Top Button</li>\n                    </ol>\n                </li>\n                <li> Forms\n                    <ol>\n                        <li>Login Form</li>\n                        <li>SignUp Form</li>\n                        <li>Checkout Form</li>\n                        <li>Contact Form</li>\n                        <li>Social Login Form</li>\n                        <li>Register Form</li>\n                        <li>Form with Icon</li>\n                        <li>Newslatter</li>\n                        <li>Stacked Form</li>\n                        <li>Responsive Form</li>\n                        <li>Popup Form</li>\n                        <li>Inline Form</li>\n                        <li>Clear Input Form</li>\n                        <li>Hide Number Arrows</li>\n                        <li>Copy Text to Clipboard</li>\n                        <li>Animated Search</li>\n                        <li>Search Button</li>\n                        <li>Fullscreen Search</li>\n                        <li>Input Field in Navbar</li>\n                        <li>Login Form in Navbar</li>\n                        <li>Custom Checkbox/Radio</li>\n                        <li>Custom Select</li>\n                        <li>Toggle Switch</li>\n                        <li>Check Checkbox</li>\n                        <li>Detect Caps Lock</li>\n                        <li>Trigger Button on Enter</li>\n                        <li>Password Validation</li>\n                        <li>Toggle Password Visibility</li>\n                        <li>Multiple Step Form</li>\n                        <li>Autocomplete</li>\n                        <li>Turn Off Specllcheck</li>\n                        <li>File Upload Button</li>\n                        <li>Empty Input Validation</li>\n                    </ol>\n                </li>\n                <li> Filters\n                    <ol>\n                        <li>Filter List</li>\n                        <li>Filter Tables</li>\n                        <li>Filter Elements</li>\n                        <li>Filter Dropdowns</li>\n                        <li>Sort List</li>\n                        <li>Sort Tables</li>\n                    </ol>\n                </li>\n                <li> Tables\n                    <ol>\n                        <li>Zebra Striped Tables</li>\n                        <li>Center Tables</li>\n                        <li>Responsive Tables</li>\n                        <li>Compersion Tables</li>\n                    </ol>\n                </li>\n                <li> More...\n                    <ol>\n                        <li>Fullscreen Video</li>\n                        <li>Modal Boxes</li>\n                        <li>Delete Modal</li>\n                        <li>Timeline</li>\n                        <li>Scroll Indicator</li>\n                        <li>Progress Bars</li>\n                        <li>Skill Bar</li>\n                        <li>Range Sliders</li>\n                        <li>Tooltips</li>\n                        <li>Display Elements Hover</li>\n                        <li>Popup</li>\n                        <li>collapsible</li>\n                        <li>Calendar</li>\n                        <li>To Do List</li>\n                        <li>Loaders</li>\n                        <li>Star Rating</li>\n                        <li>User Rating</li>\n                        <li>Overlay Effect</li>\n                        <li>Contact Chips</li>\n                        <li>Cards</li>\n                        <li>Flip Card</li>\n                        <li>Profile Card</li>\n                        <li>Product Card</li>\n                        <li>Alert</li>\n                        <li>Callout</li>\n                        <li>Notes</li>\n                        <li>Labels</li>\n                        <li>Circles</li>\n                        <li>Coupon</li>\n                        <li>List Group</li>\n                        <li>List without Bullets</li>\n                        <li>Responsive Text</li>\n                        <li>Cutout Text</li>\n                        <li>Glowing Text</li>\n                        <li>Fixed Footer</li>\n                        <li>Sticky Element</li>\n                        <li>Equal Height</li>\n                        <li>Clearfix</li>\n                        <li>Responsive Floats</li>\n                        <li>Snacbar</li>\n                        <li>Fullscreen Window</li>\n                        <li>Scroll Drawing</li>\n                        <li>Smooth Scroll</li>\n                        <li>Gradient Bg Scroll</li>\n                        <li>Sticky Header</li>\n                        <li>Shink Header on Scroll</li>\n                        <li>Pricing Table</li>\n                        <li>Aspect Ratio</li>\n                        <li>Responsive Iframes</li>\n                        <li>Toggle Like/Dislike</li>\n                        <li>Toggle Hide/Show</li>\n                        <li>Toggle Dark Mode</li>\n                        <li>Togle Text</li>\n                        <li>Toggle Class</li>\n                    </ol>\n                </li>\n            </ol>\n        </div>\n    )\n}\nexport default css;\n","\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst googleAdId = 'ca-pub-yourGoogleAdId';\n\nclass GoogleAd extends Component {\n  googleInit = null;\n\n  componentDidMount() {\n    const { timeout } = this.props;\n    this.googleInit = setTimeout(() => {\n      if (typeof window !== 'undefined')\n        (window.adsbygoogle = window.adsbygoogle || []).push({});\n    }, timeout);\n  }\n\n  componentWillUnmount() {\n    if (this.googleInit) clearTimeout(this.googleInit);\n  }\n\n  render() {\n    const { classNames, slot } = this.props;\n    return (\n      <div className={classNames}>\n        <ins\n          className=\"adsbygoogle\"\n          style={{ display: 'block' }}\n          data-ad-client={googleAdId}\n          data-ad-slot={slot}\n          data-ad-format=\"auto\"\n          data-full-width-responsive=\"true\"\n        ></ins>\n      </div>\n    );\n  }\n}\n\nGoogleAd.propTypes = {\n  classNames: PropTypes.string,\n  slot: PropTypes.string,\n  timeout: PropTypes.number,\n};\n\nGoogleAd.defaultProps = {\n  classNames: '',\n  timeout: 200,\n};\n\nexport default GoogleAd;\n","import React from 'react';\nimport '../style/kidSystemconf.css';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst kidSystemconf = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={10}>\n                    <div className='sysconf-outline'>\n                    <h5>\n                        Basic & Advance Computer Skills - Class Outline\n                    </h5>\n                    <ol className='kid-sysconf-course-outline'>\n                        <li>General Introduction</li>\n                            <ol>\n                                <li>Instructor Introduction</li>\n                                <li>Student introductions (name, skill level, expectations)</li>\n                                <li>Pre-class Basic Computer Skills Survey</li>\n                                <li>Teacher Notes for Lessons 1 thru 4</li>\n                            </ol>\n                        <li className='pt2'>Introduction to the computer</li>\n                            <ol>\n                                <li>Basic components of a computer (monitor, CPU, storage, etc.)</li>\n                                <li>Keyboard vs. mouse</li>\n                                <li>Desktop vs. laptop</li>\n                                <li>Activity:  power off/on computers</li>\n                            </ol>\n                        <li className='pt2'>Introduction to Windows</li>\n                            <ol>\n                                <li>Operating Systems (brief explanation of O/S, application and data layers)</li>\n                                <li>Desktop (icons, Start button, taskbar)</li>\n                                <li>Cursor/mouse</li>\n                                <li>Activity:  click & drag desktop icons</li>\n                                <li>Programs (3 ways to start programs (icon, Start, All Programs))</li>\n                                <li>Activity:  use Play with Paint to show how to use the mouse and icons</li>\n                                <li>Handout:  Tips for Using the Mouse and Keyboard</li>\n                            </ol>\n                        <li className='pt2'>Introduction to typing</li>\n                            <ol>\n                                <li>Benefits of typing skills</li>\n                                <li>Explain “ghost fingers” and green keys</li>\n                                <li>Activity:  open Mavis Beacon, show sign in, lessons and games</li>\n                            </ol>\n                        <li className='pt2'>Review Windows and Typing</li>\n                            <ol>\n                                <li>Review the desktop and how to open programs (desktop icons, Start menu)</li>\n                            </ol>\n                        <li className='pt2'>Windows Navigation</li>\n                            <ol>\n                                <li>Window features (minimize, resize, exit, click & drag)</li>\n                                <li>Menu bar (drop down arrow)</li>\n                                <li>Tool bar (icons) (roll cursor over to ID)</li>\n                                <li>Scrolling</li>\n                                <li>Multiple ways to do same thing (menu, icon, keyboard)</li>\n                            </ol>\n                        <li className='pt2'>Windows File Management</li>\n                            <ol>\n                                <li>Options for storage (internal drive, flash drive, CD/DVD)</li>\n                                <li>Introduce Flash Drive</li>\n                                <li>Files and Folders</li>\n                                <li>My Computer</li>\n                                <li>Activity:  find flash drive, find a specific folder and then find the file</li>\n                                <li>Save As, Save and Exit without changes</li>\n                            </ol>\n                        <li className='pt2'>Review Formatting and File Management</li>\n                            <ol>\n                                <li>Activity:  Pop Quiz</li>\n                            </ol>\n                        <li className='pt2'>Control pannel Management</li>\n                            <ol>\n                                <li>Network and Sharing Center</li>\n                                <li>Data and Time</li>\n                                <li>Keyboard</li>\n                                <li>Device Manager</li>\n                                <li>User Accounts</li>\n                                <li>Devices and Printer</li>\n                                <li>Mouse</li>\n                                <li>Programs and Features</li>\n                                <li>Sound</li>\n                                <li>System</li>\n                                <li>Window Defender Firewall</li>\n                                <li>System clean Management</li>\n                            </ol>\n                        <li className='pt2'>CMD & Terminal Introduction</li>\n                        <li className='pt2'>Final Review</li>\n                        <li  className='pt2'>Exam</li>\n                    </ol>\n                </div>\n                </Cell>\n\n                <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n            \n            \n\n        </div>\n    )\n}\nexport default kidSystemconf;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst kidBrowserconf = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={10}>\n                    <div className='kidBrowserconf-first-section'>\n                        <div>\n                            <h5>\n                                Basic & Advance Browser Skills - Class Outline\n                            </h5>\n                            <ol>\n                                <li> Browser's Cache and Cookies Cleanup\n                                    <ol>\n                                        <li>Keyboard Shortcut</li>\n                                        <li>From the browser</li>\n                                        <li>Activity: Cleanup</li>\n                                    </ol>\n                                </li>\n                                <li className='pt2'>Configuration browser settings\n                                    <ol> \n                                        <li>Autofill form</li>\n                                        <li>Default browser</li>\n                                        <li>Privacy & Security</li>\n                                        <li>Search Engine</li>\n                                        <li>On Startup</li>\n                                        <li>Download Location</li>\n                                    </ol>\n                                </li>\n                                <li className='pt2'>Browser bookmark management\n                                    <ol> \n                                        <li>Sticky bookmark</li>\n                                        <li>Save address on bookmark</li>\n                                        <li>File management on bookmark</li>\n                                        <li>Folder management on bookmark</li>\n                                        <li>Drag & Drop file & folder on bookmark</li>\n                                    </ol>\n                                </li>\n                                <li className='pt2'>Browser extention management (Web Store)\n                                    <ol>\n                                        <li>Add essential extention</li>\n                                        <li>Delete extention</li>\n                                        <li>Customize extention</li>\n                                    </ol>\n                                </li>\n                                <li className='pt2'> Private (Incognito) mode\n                                    <ol>\n                                        <li>Incognito management</li>\n                                        <li>Tab Shortcut</li>\n                                        <li>New Window Shortcut</li>\n                                    </ol>\n                                </li>\n                                <li className='pt2'> Cloud Management\n                                    <ol>\n                                        <li>C.M: Box Drive</li>\n                                        <li>C.M: DropBox Drive</li>\n                                        <li>C.M: Draw.io - Drawing</li>\n                                        <li>C.M: Review</li>\n                                        <li>C.M: Exam</li>\n                                    </ol>\n                                </li>\n                                <li className='pt2'>Final Review</li>\n                                <li className='pt2'>Exam</li>\n                            </ol>\n                        </div>\n                    </div>\n                </Cell>\n                <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n        </div>\n    )\n}\nexport default kidBrowserconf;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst kidMsoffice = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={10}>\n                    <div className='kidMsoffice-first-section-'>\n                        <div>\n                            <h5>Basic & Advance MS Word Skills - Class Outline</h5>\n                            <ol>\n                                <li>MS Office - Word | Google Docs\n                                    <ol>\n                                        <li>MS Office - M.W: Home</li>\n                                        <li>MS Office - M.W: Insert</li>\n                                        <li>MS Office - M.W: Design</li>\n                                        <li>MS Office - M.W: Layout</li>\n                                        <li>MS Office - M.W: References</li>\n                                        <li>MS Office - M.W: Mailing</li>\n                                        <li>MS Office - M.W: Review</li>\n                                        <li>MS Office - M.W: View</li>\n                                        <li>MS Office - M.W: Shape Format</li>\n                                        <li>MS Office - M.W: Template</li>\n                                        <li>MS Office - M.W: Review</li>\n                                        <li>MS Office - M.W: Exam</li>\n                                    </ol>\n                                </li>\n                                <li className='pt2'>MS Office - Excel | Google Sheet\n                                    <ol>\n                                        <li>MS Office - M.E: Home</li>\n                                        <li>MS Office - M.E: Insert</li>\n                                        <li>MS Office - M.E: Page Layout</li>\n                                        <li>MS Office - M.E: Formulas</li>\n                                        <li>MS Office - M.E: Data</li>\n                                        <li>MS Office - M.E: Review</li>\n                                        <li>MS Office - M.E: View</li>\n                                        <li>MS Office - M.E: Template</li>\n                                        <li>MS Office - M.E: Review</li>\n                                        <li>MS Office - M.E: Exam</li>\n                                    </ol>\n                                </li>\n                                <li className='pt2'>MS Office - PowerPoint | Google Slide\n                                    <ol>\n                                        <li>MS Office - M.P.P: Home</li>\n                                        <li>MS Office - M.P.P: Insert</li>\n                                        <li>MS Office - M.P.P: Design</li>\n                                        <li>MS Office - M.P.P: Transitions</li>\n                                        <li>MS Office - M.P.P: Animations</li>\n                                        <li>MS Office - M.P.P: Slide Show</li>\n                                        <li>MS Office - M.P.P: Review</li>\n                                        <li>MS Office - M.P.P: View</li>\n                                        <li>MS Office - M.P.P: Template</li>\n                                        <li>MS Office - M.P.P: Review</li>\n                                        <li>MS Office - M.P.P: Exam</li>\n                                    </ol>\n                                </li>\n                                <li className='pt2'>MS Office - OutLook\n                                    <ol>\n                                        <li>MS Office - M.O: New Email</li>\n                                        <li>MS Office - M.O: New Items</li>\n                                        <li>MS Office - M.O: Delete</li>\n                                        <li>MS Office - M.O: Archive</li>\n                                        <li>MS Office - M.O: Replay</li>\n                                        <li>MS Office - M.O: Replay All</li>\n                                        <li>MS Office - M.O: Forward</li>\n                                        <li>MS Office - M.O: Meeting</li>\n                                        <li>MS Office - M.O: Attachment</li>\n                                        <li>MS Office - M.O: Move</li>\n                                        <li>MS Office - M.O: Junk</li>\n                                        <li>MS Office - M.O: Rules</li>\n                                        <li>MS Office - M.O: Read/UnRead</li>\n                                        <li>MS Office - M.O: Categorize</li>\n                                        <li>MS Office - M.O: Follow Up</li>\n                                        <li>MS Office - M.O: Filter Email</li>\n                                        <li>MS Office - M.O: Address Book</li>\n                                        <li>MS Office - M.O: Send & Receive</li>\n                                        <li>MS Office - M.O: IP Location</li>\n                                        <li>MS Office - M.O: Review</li>\n                                        <li>MS Office - M.O: Exam</li>\n\n                                    </ol>\n                                </li>\n                                <li className='pt2'>MS Office - OneNote\n                                    <ol>\n                                        <li>MS Office - M.O: Home</li>\n                                        <li>MS Office - M.O: Insert</li>\n                                        <li>MS Office - M.O: Draw</li>\n                                        <li>MS Office - M.O: View</li>\n                                        <li>MS Office - M.O: Review</li>\n                                        <li>MS Office - M.O: Exam</li>\n                                    </ol>\n                                </li>\n                                <li className='pt2'>MS Office - OneDrive\n                                    <ol>\n                                        <li>MS Office - M.O.D: File Management</li>\n                                        <li>MS Office - M.O.D: Folder Management</li>\n                                        <li>MS Office - M.O.D: Share File & Folder</li>\n                                        <li>MS Office - M.O.D: Review</li>\n                                        <li>MS Office - M.O.D: Exam</li>\n                                    </ol>\n                                </li>\n                                <li className='pt2'>Final Review</li>\n                                <li className='pt2'>Exam</li>\n                            </ol>\n                        </div>\n                    </div>\n                </Cell>\n                <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n        </div>\n    )\n}\nexport default kidMsoffice;","export default __webpack_public_path__ + \"static/media/code_kids.354c9d33.png\";","import React from 'react';\nimport '../style/coursesCode4Kids.css';\nimport { Grid, Cell } from 'react-mdl';\nimport HtmlContainer from '../../container/html';\nimport CssContainer from '../../container/css';\nimport SystemConfig  from '../../code4kids/tabs/kidSystemconf';\nimport BrowserConfig  from '../../code4kids/tabs/kidBrowserconf';\nimport MsOfficeConf  from '../../code4kids/tabs/kidMsoffice';\nimport code_kids_pic from '../../../images/tabs/code_kids.png';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst coursesCode4Kids = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={10}>\n                    <div>\n                        <img src={code_kids_pic} alt='code4kidsl' />\n                    </div>\n                    <div className='kid-csforall-oba-video'>\n                        <h5>Computer Science For All</h5>\n                        <iframe title='CS For All' width=\"250\" height=\"220\" src=\"https://www.youtube.com/embed/qZfrDLLja-k\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n                            Computer Science  for Students\n                        </iframe>\n                    </div>\n                    <div className='kid-csforall-oba-para'>\n                        <p> \n                            Learn about President Obama’s bold new initiative to empower a generation\n                            of American students with the computer science skills they need to thrive\n                            igital economy.\n                        </p>\n                            \n                        <h5>\n                            CS For All \n                        </h5>\n                        <p>\n                            Computer Science for All is the President’s bold new initiative to \n                            empower all American students from kindergarten through high school \n                            to learn computer science and be equipped with the computational \n                            thinking skills they need to be creators in the digital economy, \n                            not just consumers, and to be active citizens in our technology-driven \n                            world. Our economy is rapidly shifting, and both educators and business \n                            leaders are increasingly recognizing that computer science (CS) is a “new \n                            c” skill necessary for economic opportunity and social mobility.\n                        </p>\n                        <p>\n                            CS for All builds on efforts already being led by parents, teachers, school \n                            districts, states, and private sector leaders from across the country.  \n                        </p>\n                    </div>\n                    <div>\n                        <h5>What is CODING?</h5>\n                        <p> \n                            Welcome to our of code an introduction to the basics of computer \n                            programming or as it's commonly called codin., \n                        </p>\n                        <p>\n                            code is all around you and the results of coding are everywhere whether \n                            you're posting a tweet watching a YouTube video or even swiping a debit \n                            card whatever happens because of lines of code in fact just about anything \n                            with a plug or battery uses code or computer programs to do things lots of \n                            everyday items phones watches microwaves cars have computers in them and they \n                            all rely on code to make them work. \n                        </p>\n                        <p>\n                            so what is code exactly code is a precise set of instructions a computer\n                            can understand think of it as a recipe the instructions need to be \n                            precise so whatever you're making turns out the way it should and just \n                            like people in different parts of the world speak different languages \n                            computers understand many different languages - with names like Python, \n                            C#, Ruby, Java, Javascript and Perl they're all different in their own way\n                            similar to spoken languages they share many of the same basic features. \n                        </p>\n                        <p>\n                            Today we're here to learn how to write code and how can we explore \n                            the innovation, let’s get started to begin.\n                        </p>\n                        <hr />\n                    </div>\n                    <div className='kid-outline'>\n                        <h2>Course Outline</h2>\n                        <div className='kid-course-grid '>\n                            <div className='kid-course-basic'> \n                                <ul className='kid-courseList'>\n                                    <h5>BASICS</h5>\n                                    <a href={SystemConfig}><li>SYSTEM-CONFIGURATION</li></a>\n                                    <li>CONTROL PANEL</li> \n                                    <a href={BrowserConfig}><li>BROWSER-CONFIGURATION</li></a>                         \n                                </ul>\n                            </div>\n                            <div className='kid-course-basic'> \n                                <ul className='kid-courseList'>\n                                    <h5>HIGHER</h5>\n                                    <a href={MsOfficeConf}><li>MS-OFFICE</li></a>\n                                    <li>MS-WORD</li>\n                                    <li>EXCEL</li>\n                                    <li>POWER-POINT</li>\n                                    <li>OUTLOOK</li>\n                                    <li>ONENOTE</li>\n                                    <li>EDITORS</li>\n                                </ul>\n                            </div>\n                            <div className='kid-course-basic'> \n                                <ul className='kid-courseList'>\n                                    <h5>INTERMEDIATE</h5>\n                                    <li>HTML5</li>\n                                    <li>BASIC CSS</li>\n                                    <li>INTERMEDIATE CSS</li>   \n                                    <li>ADVANCED CSS</li>                       \n                                </ul>\n                            </div>\n                            <div className='kid-course-basic'> \n                                <ul className='kid-courseList'>\n                                    <h5>ADVANCED</h5>\n                                    <li>JAVASCRIPT</li>\n                                    <li>REACT</li>\n                                    <li>DEVELOPMENT</li>                            \n                                </ul>\n                            </div>\n                        </div>\n                        <hr />\n                        <div className='kid-html-section'>\n                            <HtmlContainer />\n                        </div>\n                        <hr />\n                        <div className='kid-css-section'>\n                            <CssContainer />\n                        </div>\n                        <hr />\n                    </div>\n                </Cell>\n                <Cell className='page-tab-second-col' col={2} >\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n        </div>\n    )\n}\nexport default coursesCode4Kids;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport HtmlContainer from '../../container/html';\nimport CssContainer from '../../container/css';\nimport GoogleAd from '../../../components/GoogleAd';\n\n\nconst coursesWebDev = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={10}>\n                    <div>\n                        <h5>\n                            Basic & Advance Web Development - course Outline\n                        </h5>\n                        <div className='webDev-html-section'>\n                            <HtmlContainer />\n                        </div>\n                        <hr />\n                        <div className='webDev-css-section'>\n                            <CssContainer />\n                        </div>\n                        <hr />\n                    </div>\n                </Cell>\n                <Cell className='page-tab-second-col' col={2} >\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n        </div>\n    )\n}\nexport default coursesWebDev;","export default __webpack_public_path__ + \"static/media/CourseOutline.4048c423.png\";","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\nimport courseOutline from '../../../images/CourseOutline.png';\n\nconst coursesAutomation = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAutomation-'>\n                        <h1>Software Quality Assurance Full Stack Course Outline</h1>\n                        <img className='courseOutline' src={courseOutline} alt=\"Course Outline\"></img>\n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n        </div>\n    )\n}\nexport default coursesAutomation;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\nimport courseOutline from '../../../images/CourseOutline.png';\n\nconst coursesManual = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAppium-'>\n                        <h1>Software Quality Assurance Full Stack Course Outline</h1>\n                        <img className='courseOutline' src={courseOutline} alt=\"Course Outline\"></img>\n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n        </div>\n    )\n}\nexport default coursesManual;","import React, {Component} from 'react';\nimport { Tabs, Tab } from 'react-mdl';\nimport '../style/courseTab.css';\nimport HeaderText from '../components/header';\nimport CoursesCode4Kids from '../components/courses/tabs/coursesCode4Kids';\nimport CoursesWebDev from '../components/courses/tabs/coursesWebDev';\nimport CoursesAutomation from '../components/courses/tabs/coursesAutomation';\nimport CoursesManual from '../components/courses/tabs/coursesManual';\n\nclass Courses extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { activeTab: 0 };\n    }\n\n    toggleCategories() {\n        if(this.state.activeTab === 0) {\n            return(\n                <CoursesCode4Kids />\n            )\n        } else if(this.state.activeTab === 1) {\n            return(\n                <CoursesWebDev />\n            )\n        } else if(this.state.activeTab === 2) {\n            return(\n                <CoursesAutomation />\n            )\n        } else if(this.state.activeTab === 3) {\n            return(\n                <CoursesManual />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"category-tabs\">\n                <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({ activeTab: tabId })} ripple>\n                    <Tab>Code4Kids</Tab>\n                    <Tab>WebDevelopment</Tab>\n                    <Tab>Automation</Tab>\n                    <Tab>Manual</Tab>\n                </Tabs>\n                <HeaderText /> \n                <section>\n                    <div className=\"content\">{this.toggleCategories()}</div>\n                </section>\n            </div>    \n        );\n    }\n}\nexport default Courses;\n","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport HTMLContainer from '../../container/html';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst html = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={10}>\n                    <div>\n                        <HTMLContainer />\n                    </div>\n                </Cell>\n\n                <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n        </div>\n    )\n}\nexport default html;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport CSSContainer from '../../container/css';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst css = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={10}>\n                    <div>\n                        <CSSContainer />\n                    </div>\n                </Cell>\n\n                <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n        </div>\n    )\n}\nexport default css;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst javascript = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={10}>\n                    <div className='javascript-outline'>\n                        <h1>Working in progress...</h1>\n                    </div>\n                </Cell>\n\n                <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n        </div>\n    )\n}\nexport default javascript;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst reactjs = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={10}>\n                    <div className='reactjs-outline'>\n                        <h1>Working in progress...</h1>\n                    </div>\n                </Cell>\n\n                <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n        </div>\n    )\n}\nexport default reactjs;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst webdevelopment = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={10}>\n                    <div className='webdevelopment-outline'>\n                        <h1>Working in progress...</h1>\n                    </div>\n                </Cell>\n\n                <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n            </Grid>\n        </div>\n    )\n}\nexport default webdevelopment;","import React, {Component} from 'react';\nimport { Tabs, Tab } from 'react-mdl';\nimport HeaderText from '../components/header';\nimport KidSystemconf from '../components/code4kids/tabs/kidSystemconf';\nimport KidBrowserconf from '../components/code4kids/tabs/kidBrowserconf';\nimport KidMsoffice from '../components/code4kids/tabs/kidMsoffice';\nimport KidHtml from '../components/code4kids/tabs/html'\nimport KidCss from '../components/code4kids/tabs/css'\nimport KidJavascript from '../components/code4kids/tabs/javascript'\nimport KidReact from '../components/code4kids/tabs/reactjs'\nimport KidFrontend from '../components/code4kids/tabs/webdevelopment';\n\n\nclass Code4Kids extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { activeTab: 0 };\n    }\n\n    toggleCategories() {\n        if(this.state.activeTab === 0) {\n            return(\n                <KidSystemconf />\n            )\n        } else if(this.state.activeTab === 1) {\n            return(\n                <KidBrowserconf />\n            )\n        } else if(this.state.activeTab === 2) {\n            return(\n                <KidMsoffice />\n            )\n        } else if(this.state.activeTab === 3) {\n            return(\n                <KidHtml />\n            )\n        } else if(this.state.activeTab === 4) {\n            return(\n                <KidCss />\n            )\n        } else if(this.state.activeTab === 5) {\n            return(\n                <KidJavascript />\n            )\n        } else if(this.state.activeTab === 6) {\n            return(\n                <KidReact />\n            )\n        } else if(this.state.activeTab === 7) {\n            return(\n                <KidFrontend />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"category-tabs\">\n                <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({ activeTab: tabId })} ripple>\n                    <Tab>System-conf</Tab>\n                    <Tab>Browser-conf</Tab>\n                    <Tab>MS-Office</Tab>\n                    <Tab>HTML</Tab>\n                    <Tab>CSS</Tab>\n                    <Tab>Javascript</Tab>\n                    <Tab>ReactJS</Tab>\n                    <Tab>FrontendDevelopment</Tab>\n                </Tabs>\n                <HeaderText /> \n                <section>\n                    <div className=\"content\">{this.toggleCategories()}</div>\n                </section>\n            </div>    \n        );\n    }\n}\nexport default Code4Kids;","export default __webpack_public_path__ + \"static/media/manualLogo.1c0c04d3.png\";","export default __webpack_public_path__ + \"static/media/defectBugError.0946ec0d.png\";","export default __webpack_public_path__ + \"static/media/bugLifeCycle.8ba6cc50.png\";","export default __webpack_public_path__ + \"static/media/testPyramid.140a20ce.png\";","export default __webpack_public_path__ + \"static/media/testPyramid1.31ba110a.png\";","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport '../style/resManual.css';\nimport ManualLogo from '../../../images/tabs/manualLogo.png';\nimport DefectBugError from '../../../images/tabs/defectBugError.png';\nimport BugLifeCycle from '../../../images/tabs/bugLifeCycle.png'\nimport TestPyramid from '../../../images/tabs/testPyramid.png'\nimport TestPyramid1 from '../../../images/tabs/testPyramid1.png'\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resManual = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resManual-first-section'>\n                        <div>\n                            <h5>Software Manual Testing</h5>\n                            <img id='manulPicId' src={ManualLogo} alt='Manual Logo' />\n                            <h5>Manual Tesing are 2 types:</h5>\n                            <ol>\n                                <li>Web|UI|Frontend Manaul Test</li>\n                                <li>API|Backend Manaul Test</li>\n                            </ol>\n\n                            <h5> What is Software testing?</h5>\n                            <p>\n                                Testing is the process consisting of all lifecycle activities, both static \n                                and dynamic, concerned with planning, preparation and evaluation of software \n                                products and related work products to determine that they satisfy specified \n                                requirements, to demonstrate that they are fit for purpose and to detect defects.\n                            </p>\n\n                            <h5> What is Software Manual testing?</h5>\n                            <p>\n                                Manual testing is the process of manually testing software for defects. \n                                It requires a tester to play the role of an end user whereby they use most \n                                of the application's features to ensure correct behavior.\n                            </p>\n                            <p>\n                                MANUAL TESTING is a type of Software Testing where Testers manually execute test \n                                cases without using any automation tools. Manual Testing is the most primitive \n                                of all testing types and helps find bugs in the software system. \n                            </p>\n                            <p>\n                                Any new application must be manually tested before its testing can \n                                be automated. Manual Testing requires more effort but is necessary to \n                                check automation feasibility.\n                            </p>\n                            <p>\n                                Manual Testing does not require knowledge of any testing tool.\n                            </p>\n                        </div>\n                        <h5>What is a “bug?”</h5>\n                        <p>\n                            A bug is a bug is an error, flaw, mistake, failure, or fault in a computer code (program) that prevents it from behaving as intended (e.g., producing an incorrect result). (You can also add this: When the expected results (accordingly to the required documents) don’t match with the actual results (while testing), then it is considered a bug)\n                        </p>\n                        <div>\n                            <h5> What is Errors, Defects, and Failures?</h5>\n                            <img id='bugPicid' alt='bugPic Logo' src={DefectBugError} height='200px' width='600px'/>\n                            <p>\n                                A person can make an error (mistake), which can lead to the introduction of a defect (fault or bug) in the software code or in some other related work product. An error that leads to the introduction of a defect in one work product can trigger an error that leads to the introduction of a defect in a related work product.\n                            </p>\n                            <p>\n                                For example, a requirements elicitation error can lead to a requirements defect, which then results in a programming error that leads to a defect in the code.\n                            </p>\n                            <p>\n                            If a defect in the code is executed, this may cause a failure, but not necessarily in all circumstances.\n                            <br />\n                            For example, some defects require very specific inputs or preconditions to trigger a failure, which may occur\n                            rarely or never. \n                            </p>\n                            <p>\n                                Errors may occur for many reasons, such as:   \n                            </p>\n                            <ul>\n                                <li>Time pressure</li>\n                                <li>Human fallibility</li>\n                                <li>Inexperienced or insufficiently skilled project participants</li>\n                                <li>Miscommunication between project participants, including miscommunication about requirements\n                                    and design</li>\n                                <li>Complexity of the code, design, architecture, the underlying problem to be solved, and/or the technologies used</li>\n                                <li>Misunderstandings about intra-system and inter-system interfaces, especially when such intrasystem and inter-system interactions are large in number</li>\n                                <li>New, unfamiliar technologies\n                                    <br />\n                                    In addition to failures caused due to defects in the code, failures can also be caused by environmental conditions.\n                                    <br />\n                                    For example, radiation, electromagnetic fields, and pollution can cause defects in firmware or\n                                    influence the execution of software by changing hardware conditions.\n                                    Collapse</li>\n\n                            </ul>\n                        </div>\n                        <h5>Bug Life Cycle</h5>\n                        <img id='bugLifeCycleId' src={BugLifeCycle} alt='Bug Life Cycle' height='700px' width='900px'/>\n                        <h5>What is Business Requirement Document (BRD)?</h5>\n                        <p>\n                            It is a document that describes the details of the application functionalities which is required by the user. This document is written by the Business Analysts.\n                        </p>\n                        <h5>What is SCRUM & What is the User Stories?</h5>\n                        <p>\n                            Visit Website about scrum & user stories: \n                            <a href='https://www.mountaingoatsoftware.com/agile'>\n                                VISIT\n                            </a> \n                        </p>\n                        <h5>\n                            When do you think STORY is Ready to Develop?\n                        </h5>\n                        <ul>\n                            <li>Independent and deliverable in one sprint</li>\n                            <li>The design is clear, and is linked to or attached to the Story</li>\n                            <li>It has detailed acceptance criteria that describe the desired functionality, including specifics for analytics, localization, and performance as necessary</li>\n                            <li>It is Testable - it can be verified independently to have met the acceptance criteria</li>\n                            <li>It is Estimatable</li>\n                            <li>There are no unmet dependencies</li>\n                            <li>Minimum performance criteria has been defined & documented if necessary</li>\n                            <li>Test plans added to the project sprint</li>\n                            <li>The Test Engineer, Product Owner, and Developer responsible for the story are all satisfied they understand the requirment of the story and they have no further question.</li>\n                        </ul>\n                        <h5>When do you think Story can be Done?</h5>\n                        <ul>\n                            <li>Code and tests have been written and verify the acceptance criteria</li>\n                            <li>The code and tests have passed and peer-reviewed</li>\n                            <li>The code has been merged into mainline branch</li>\n                            <li>It has passed automated integation function tests</li>\n                            <li>It has been incorporated into a ci/cd build pipeline</li>\n                            <li>The build has been deployed to both development and Stage/QA environment</li>\n                            <li>It has been verified by SQA as meeting the acceptance criteria </li>\n                            <li>It has been verified by the P.O as meeting the acceptance criteria</li>\n                        </ul>\n                        <h5>What is Software Testing Life Cycle (STLC)?</h5>\n                        <p>\n                            The testing of software has its own life cycle.  It starts with study and analyzing the requirements.  Here is the software testing life cycle:\n                        </p>\n                        <ol>\n                            <li>Requirement Study</li>\n                            <li>Test Planning</li>\n                            <li>Writing Test Cases</li>\n                            <li>Review the Test Cases</li>\n                            <li>Executing the Test Cases</li>\n                            <li>Bug logging and tracking</li>\n                            <li>Bug Re-test</li>\n                            <li>Close or Reopen bugs</li>\n                            <li>Result & Report</li>\n                        </ol>\n                        <h5>What is Software Development Life Cycle?</h5>\n                        <p>\n                            The systems (or software) development life cycle (SDLC) is a conceptual model used in project management that describes the stages involved in an information system development project, from an initial feasibility study through maintenance of the completed application.\n                        </p>\n                        <p><strong>It includes the following different stages:</strong></p>\n                        <ol>\n                            <li>Requirement phase</li>\n                            <li>Design phase</li>\n                            <li>Coding phase</li>\n                            <li>Testing phase</li>\n                            <li>Release phase</li>\n                            <li>Maintenance</li>\n                        </ol>\n                        <h5>What is a Test Plan?</h5>\n                        <p>A Test Plan defines and provides a layout of how and what to test. The Ttest Plan is a document describing the scope, approach, resources, and schedule of intended testing activities. It identifies test items, the features to be tested, the testing tasks and who will do each task (roles and responsibilities) and any risks and its solutions.</p>\n                        <h5>What does Test Plan include?</h5>\n                        <p>\n                            A Test Plan includes Heading, Revision History, Table of Contents, Introduction, Scope, Approach, Overview, different types of testing that will be carried out, what software and hardware will be required, issues, risks, assumptions and signs off section.\n                        </p>\n                        <h5>\n                            Did you write test plan? What should include in the test plan?\n                        </h5>\n                        <p>\n                            Yes | Yes I have been contributing to the test plan. In a test plan first I give a brief Introduction to what purpose I am going to write the test plan, then I mention the application details, after that I mention the test in-scope and out-scope then I mention the roles and responsibilities of who is going to do what, then I mention the supporting documents of BRD and FRD; then I mention the testing strategy or techniques here, then I mention test schedule, then I mention the assumption of what tools I may use and dependency like database has to be ready, then I mention the entry and exit criteria of the test and at the end I include the Glossary of this test plan.\n                        </p>\n                        <h5>\n                            What is Test Strategy?\n                        </h5>\n                        <p>\n                            A test strategy is an outline that describes the testing portion of the software development cycle. It is created to –>  inform project managers, testers, and developers about some key issues of the testing process. \n                        </p>\n                        <h5>\n                            What does included in Test strategy?\n                        </h5>\n                        <p>\n                            The testing objective, methods of testing new functions, total time and resources required for the project, and the testing environment? It also describes how the product risks of the stakeholders are mitigated at the test level, which types of test are to be performed, and which entry and exit criteria apply. The test strategy is created based on development design documents. It is written by the Test Manager or Lead.\n                        </p>\n                        <p>\n                            It includes introduction, scope, resource and schedule for test activities, acceptance criteria, test environment, test tools, test priorities, test planning, executing a test pass and types of test to be performed, Roles and Responsibilities, Test Status Collections and Reporting, Test Records Maintenance, Test Summary\n                        </p>\n                        <h5>Different between Test Plan and Test Strategy same type of document?</h5>\n                        <p>\n                            Yes. They are different documents.<br />\n                            Test Plan is a document that collects and organizes test cases by functional area, It is a plan for testing,  it defines scope, approach, and environment Whereas Test Strategy is a document for making decisions about value and also approach to testing. Test Plan is prepared by the tester whereas the Test Strategy is prepared by the QA Manager or QA lead.\n                        </p>\n                        <p>\n                            OR <br />\n                            By a test plan, I am going to have a plan for the test of the application like the application details, peoples involve in the test, what are the supporting docs we need, what are the time line.\n                            <br />\n                            By testing strategy, I will get the overall picture of how the testing will be conduct means what tools I am going to use for the test.\n                        </p>\n                        <h5>What is a Use Case?</h5>\n                        <p>A use case is a document that describes the user action and system response for a particular functionality.</p>\n                        <h5>What is a Use Case and what does it include?</h5>\n                        <p>\n                            A Use Case is a document that describes the user action and system response for a particular functionality. It includes a cover page, Revision History, Table of Contents, Floe of Events (normal flow and alternative flow), Exceptions, Special Requirements, Pre-conditions, and Post-conditions.\n                            <br />\n                            Now, Let us write Test Cases based on this Use Case. Remember, one Use Case can have many Test Cases.\n                        </p>\n                        <h5>\n                            What is Business Design Document?\n                        </h5>\n                        <p>\n                            It is the document which describes the application functionalities of the user in detail. This document is the further details of the Business Requirement Document. This is a very crucial step in the SDLC. Sometimes the Business Requirement Document and Business Design Document can be lumped together to make only one Business Requirement Document.\n                        </p>\n                        <h5>\n                            List of Test Cases writing tools & plugings?\n                        </h5>\n                        <ol>\n                            <li>MS Excel</li>\n                            <li>Confluence</li>\n                            <li>HP Quality Center</li>\n                            <li>Zephyr</li>\n                            <li>Adaptavist</li>\n                            <li>TestRail</li>\n                            <li>qTest</li>\n                            <li>Xray</li>\n                            <li>TestCaseLab</li>\n                            <li>TestMonitor</li>\n                            <li>Testpad</li>\n                            <li>ReQtest</li>\n                            <li>XQual</li>\n                            <li>Test Collab</li>\n                            <li>PractiTest</li>\n                        </ol>\n                        <h5>What is a Test Case? What does it include?</h5>\n                        <p>\n                            A Test Case is a document that describes step by step process how to test the application. A Test Case includes Test Case ID, Steps Description, Expected Output, Actual Output, Pass/Fail, Remarks. \n                        </p>\n                        <h5>\n                            What document did you refer to write the Test Cases?\n                        </h5>\n                        <p>\n                            Requirement document. (NOTE: It can also be Use Cases or Design Document)\n                            <br />\n                            (Note: It depends on company to company. In some companies, they use Use Cases. In some companies, they use Requirement Documents and in some companies, they use Design Document. However, in the practical scenario, most of the companies have requirement document at least).\n                        </p>\n                        <h5>\n                            Did you have a situation where you did not have any documents (no requirement document, no Use Cases, or no Design Document) and you had to write the Test Cases? How did you write the Test Cases?\n                        </h5>\n                        <p>\n                            Yes. I have been to that kind of scenarios several times. There were companies where they had no documents at all. In that case, I had to discuss the application scenario and functionalities with the Business Analysts or developer. I kind of prepared a document in consultation with Business Analysts and Developers and then started writing Test Cases.\n                        </p>\n\n                        <h5>Functional Testing Vs Non-Functional Testing</h5>\n                        <p>\n                            Functional Testing: Testing the application against business requirements. Functional testing is done using the functional specifications provided by the client or by using the design specifications like use cases provided by the design team.\n                        </p>\n                        <p>Functional Testing Tools|API:</p>\n                        <ol>\n                            <li>QTP|UFT</li>\n                            <li>Selenium</li>\n                        </ol>\n                        <p><strong>Functional Testing include:</strong></p>\n                        <ol>\n                            \n                            <li>Unit Testing</li>\n                            <li>Integration Testing (Top Down, Bottom up Testing)</li>\n                            <li>Smoke testing(Ad-hoc testing)</li>\n                            <li>Regression Testing</li>\n                            <li>Sanity testing</li>\n                            <li>User Acceptance Testing(Alpha & Beta)</li>\n                            <li>Interface & Usability Testing</li>\n                            <li>Globalization & Localization Testing</li>\n                            <li>UAT test strategy</li>\n                            <li>System Testing</li>\n                            <li>White Box & Black Box Testing</li>\n                        </ol>\n                        <p>Non-Functional Testing: Testing the application against clients and performance requirement. Non-Functioning testing is done based on the requirements and test scenarios defined by the client.</p>\n                        <p><strong>Non-Functional Testing includes:</strong></p>\n                        <ol>\n                            <li>Functionality testing</li>\n                            <li>Reliability testing</li>\n                            <li>Usability testing</li>\n                            <li>Portability testing</li>\n                            <li>Compliance testing</li>\n                            <li>Documentation testing</li>\n                            <li>Load testing</li>\n                            <li>Performance testing</li>\n                            <li>Volume testing</li>\n                            <li>Stress testing</li>\n                            <li>Recovery testing</li>\n                            <li>Internationalization testing and Localization testing</li>\n                            <li>Compatibility & Migration Testing</li>\n                            <li>Data Conversion Testing</li>\n                            <li>Security / Penetration Testing</li>\n                            <li>Installation Testing</li>\n                            <li>Security Testing (Application Security, Network Security, System Security</li>\n                        </ol>\n                        <p><strong>Non-Functional Testing Tools:</strong></p>\n                        <ol>\n                            <li>LOAD RUNNER</li>\n                            <li>JMeter</li>\n                            <li>Blazemeter</li>\n                        </ol>\n                        <h5>\n                            The Practical Test Pyramid\n                        </h5>\n                        <p>\n                            If you want to get serious about automated tests for your software there is one key concept you should know about: \n                            <a href='https://martinfowler.com/articles/practical-test-pyramid.html'>the test pyramid.</a>\n                        </p>\n                        <p>\n                            Mike Cohn's original test pyramid consists of three layers that your test suite should consist of (bottom to top):\n                        </p>\n                        <ul>\n                            <li>Unit Tests</li>\n                            <li>Service(API) Tests</li>\n                            <li>User Interface(UI) Tests</li>\n                        </ul>\n                        <div className='testPyramd'>\n                            <img id='testPyramid-1' src={TestPyramid} alt='Test Pyramid' height='250px' width='400px'/>\n                            <img id='testPyramid-2' src={TestPyramid1} alt='Test Pyramind' height='250px' width='400px'/>\n                            <h5>What's the SQA Testing proces you have been following?</h5> \n                        </div>\n                        <p>\n                            Well, as a QA, first I have to review the requirements, then I wrote the test plan, I develop my test cases, I setup the test environment, I execute the test cases, if I find any defect I log the defect, after all the required test cases done and if there will be no major defect I provide sign off. This is the experience I had as a Q.A.\n                        </p>\n                        <h5>What's the process to test the web application?</h5>\n                        <p>\n                            First of all, I will look at the requirement documents (or design document in some companies). The requirement document will tell us what the functionalities in the application (software) are. Once I analyze the requirement documents (one module=one requirement document). After that, I will write test plans for each module (one module =one test plan). Then after the test plan is complete, I will write test cases (One module can have hundreds, even thousands of test cases). Once the test cases are ready and the application is ready (or once the build is ready), then I will start testing. Before I start testing, however, I will make sure the test environments, test data and defect logging tools are in place. This is how I will go about testing an application. \n                        </p>\n                        <h5>What is Web Based Application?</h5>\n                        <p>This Application can be accessed through the internet with the web browser. Like: Facebook is a web-based application</p>\n                        <h5>What is the pre-requirment to test the web application?</h5>\n                        <p>\n                            For a web-based testing, I need a web browser, internet connection and the URL of the web application. First I open the browser and navigate to the URL and check the User Interface as per the requirement. This is the process.\n                        </p>\n                        <h5>What is an Entry Criterion?</h5>\n                        <p>Entry criteria are the process that must be present when a system begins like..SRS, USECASE, testcase, TEST PLAN. Entry criterion is used to determine when a given test activity should start. It also includes the beginning of a level of testing, when test execution is ready to start.</p>\n                        <p>\n                            <strong>Examples of Entry Criterion:</strong>\n                        </p>\n                        <ol>\n                            <li>Verify if the Test environment is available and ready for use</li>\n                            <li>Verify if test tools installed in the environment are ready for use.</li>\n                            <li>Verify if the Testable code is available.</li>\n                            <li>Verify if Test Data is available and validated for the correctness of Data.</li>\n                        </ol>\n                        <h5>What is an Exit Criterion?</h5>\n                        <p>\n                            Exit Criteria ensures whether testing is completed and the application is ready for release like…Test Summary report, Metrics, Defect Analysis report. Exit criterion is used to determine whether a given test activity has been completed or NOT. Exit criteria can be defined for all of the test activities right from planning, specification, and execution.\n                        </p>\n                        <p><strong>Examples of Exit Criteria:</strong></p>\n                        <ol>\n                            <li>Verify if All tests planned have been run</li>\n                            <li>Verify if the level of requirement coverage has been met</li>\n                            <li>Verify if there are NO Critical or high severity defects that are left outstanding</li>\n                            <li>Verify if all high-risk areas are completely tested</li>\n                            <li>Verify if software development activities are completed at the projected cost</li>\n                            <li>Verify if software development activities are completed within the projected timelines</li>\n                        </ol>\n                        <h5>\n                            What will be the list of risk during the Test Completion?\n                        </h5>\n                        <ul>\n                            <li>Delay of Test Environment setup (QA/Stage)</li>\n                            <li>Incomplete test environment to support testing (Unstable test environment)</li>\n                            <li>Delay of CI/CD process</li>\n                            <li>Delay of device environment ipa/apk(Simulator/Real Devices)</li>\n                            <li>Delay of the physical devices for QA & Dev</li>\n                            <li>Delay of the lockdown Functionality</li>\n                            <li>Dedicated resource unavailable (Not enough resources)</li>\n                            <li>Service(Test) Account (If application support single sign-on)</li>\n                        </ul>\n                        <h5>\n                            What is a Module?\n                        </h5>\n                        <p>\n                            A ‘Module’ is a software component that has a specific task. It can be a ‘link’ which can go inside to its component detail.\n                        </p>\n                        <h5>\n                            What is Build?\n                        </h5>\n                        <p>\n                            When each of the different modules of software is prepared, they are put in a single folder by the Configuration Management Team (CMT) and it is called the ‘Build’.  In another word, the developers put their code in the shared location (folder) and all those codes (modules) are combined together so that it is a complete application that works.\n                        </p>\n                        <h5>\n                            What is meant by the Build Deployment?\n                        </h5>\n                        <p>\n                            When the Build so prepared by the CMT is sent to different Test Environments, it is called the Build Deployment.\n                        </p>\n                        <h5>\n                            What's the process how code gets pushed to production?\n                        </h5>\n                        <p>\n                            When all the test cases are executed and there is no major defect, and QA provide the sign-off, then the code is ready for production.\n                        </p>\n                        <h5>\n                            When you receive a build what do you do?\n                        </h5>\n                        <p>\n                            First I do a smoke test to validate the build version.\n                        </p>\n                        <h5>\n                            What is your approach when the application cannot be launch?\n                        </h5>\n                        <p>\n                            As QA person I review all the requirement, check all my test cases and try to find out that I didn’t miss any requirement from my side.\n                        </p>\n                        <h5>\n                            What types of minimum test cases can be developed from one single requirement?\n                        </h5>\n                        <p>\n                            Two test cases, one positive and one negative.\n                        </p>\n                        <h5>\n                            When do you know you have performed enough testing?\n                        </h5>\n                        <p>\n                            When I check and see that all the test cases I have to execute as per the requirement – then I can sure I have done enough testing.\n                        </p>\n                        <h5>\n                            When do you provide QA sign off?\n                        </h5>\n                        <p>\n                            When I check and confirm that all the required test cases are done and there is no major defect, then I provide QA sign off.\n                        </p>\n                        <h5>\n                            How would you ensure that you have covered 100% testing?\n                        </h5>\n                        <p>\n                            Well, when I see all the requirement is tested and there no test case left for execution then I will ensure that I have done 100% testing.\n                        </p>\n                        <h5>\n                            What if there is not enough time for thorough testing? What will be your approach?\n                        </h5>\n                        <p>Then I will test:</p>\n                        <ol>\n                            <li>The core functionality of the application</li>\n                            <li>The most visible option of the application</li>\n                            <li>The security functionality of the application</li>\n                        </ol>\n                        <h5>\n                            The difference between Unit test and Functional test?  Why do you perform a Unit test and Functional Test?\n                        </h5>\n                        <p>\n                            Unit Test – testing an individual unit, such as a method (function) in a class, with all dependencies mocked up.\n                        </p>\n                        <ol>\n                            <li>Unit testing = drives design (with test-Driven Development, or TDD)</li>\n                            <li>Integration testing = do all the pieces work together</li>\n                            <li>A unit testwill typically execute very few code paths, functional and integration testing many</li>\n                            <li>If a test fails, how many things could be broken? For a unit test ,the ideal answer is 1. Functional and integration tests the answer could be large</li>\n                            <li>Unit testsexecute quickly, functional and integration tests relatively slowly (in general).</li>\n                        </ol>\n                        <h5>A well explained real-life analogy of unit testing and functional testing can be described as follows,</h5>\n                        <p>\n                            Many times the development of a system is likened to the building of a house. While this analogy isn’t quite correct, we can extend it for the purposes of understanding the difference between unit and functional tests.\n                        </p>\n                        <p>\n                            Unit testing is analogous to a building inspector visiting a house’s construction site. He is focused on the various internal systems of the house, the foundation, framing, electrical, plumbing, and so on. He ensures (tests) that the parts of the house will work correctly and safely, that is, meet the building code.\n                        </p>\n                        <p>\n                            Functional tests in this scenario are analogous to the homeowner visiting this same construction site. He assumes that the internal systems will behave appropriately, that the building inspector is performing his task. The homeowner is focused on what it will be like to live in this house. He is concerned with how the house looks, are the various rooms a comfortable size, does the house fit the family’s needs, are the windows in a good spot to catch the morning sun.\n                        </p>\n                        <ol>\n                            <li>The homeowner is performing functional tests on the house. He has the user’s perspective</li>\n                            <li>The building inspector is performing unit tests on the house. He has the builder’s perspective.</li>\n                            <li>Unit Tests are written from a programmers perspective. They are made to ensure that a particular method (or a unit) of a class performs a set of specific tasks.</li>\n                            <li>Functional Tests are written from the user’s perspective. They ensure that the system is functioning as users are expecting it to</li>\n                        </ol>\n                        <p>\n                            As far as definition wise:\n                        </p>\n                        <ol>\n                            <li>Unit Testing – is performed at the code level</li>\n                            <li>Integration Testing – is performed at the communication level</li>\n                            <li>Functional Testing – is performed at the System level</li>\n                        </ol>\n                        <p>\n                            Functional Testing – This is performed on the entire system. This is to ensure that system delivers what client has asked for. To check the system from business stakeholder’s point of view is a big concern of this.\n                        </p>\n                        <p>\n                            “Unit > Integration > Functional”, specially where the original SDLC are following.\n                        </p>\n                        <h5>What is Unit Test?</h5>\n                        <p>\n                            Unit Testing – It can be done on code for a single module|portion of the code. You need to test all the paths are working correctly, all the loops are running correctly as per the conditions, all functions|classes are calling correctly etc.\n                        </p>\n                        <h5>\n                            What is Integration Testing?\n                        </h5>\n                        <p>\n                            It is used to check communication between two modules/interfaces of the system. The best method is passed the data into one module and check whether another module has picked them up that data or not. The data format changes are an important part of this.\n                        </p>\n                        <h5>\n                            What is Smoke testing?\n                        </h5>\n                        <p>\n                            It is an initial set of test to check whether the major functionalities are working or not and also to check the major breakdowns in the application. It is the preliminary test carried out by the SQA tester.\n                        </p>\n                        <p>\n                            Given an Example:\n                        </p>\n                        <p>\n                            Well! Integration testing – my last project was to verify www.att.com, where the customer can buy iPod, so whenever an iPod sold than the available quantity will show the correct figure after selling the item this is integration testing.\n                        </p>\n                        <h5>\n                            What is Alpha testing?\n                        </h5>\n                        <p>\n                            In this type of testing, the users are invited to the development center where they use the application and the developers note every particular input or action carried out by the user. Any type of abnormal behavior of the system is noted and rectified by the developers.\n                        </p>\n                        <h5>\n                            What is User acceptance testing?\n                        </h5>\n                        <p>\n                            In this type of testing, the software is handed over to the user in order to find out if the software meets the user expectations and works as it is expected to.\n                        </p>\n                        <h5>\n                            What is Beta testing?\n                        </h5>\n                        <p>\n                            In this type of testing, the software is distributed as a beta version to the users and users test the application at their sites. As the users explore the software, in case if any exception/defect occurs that is reported to the developers. \n                        </p>\n                        <h5>\n                            What is Regression testing?\n                        </h5>\n                        <p>\n                            When a function is added to an application, we need to make sure that the newly added functionality does not break the application.  In order to make it sure, we perform a repeated testing which is called Regression Testing.  We also do regression testing after the developers fix the bugs.  See the video below for more understanding. \n                        </p>\n                        <p>Given an Example</p>\n                        <p>\n                            Regression testing – In att.com developer recently add an option of “Shipped from” where the customer can see from where the product has been shipped, so I have to test here with this new option all the existing option of shipping details is working – this is regression testing.\n                        </p>\n                        <h5>\n                            What is Sanity testing?\n                        </h5>\n                        <p>\n                            Sanity testing is done after thorough regression testing is over, it is done to make sure that any defect fixes or changes after regression testing do not break the core functionality of the product. It is done towards the end of the product release phase\n                        </p>\n                        <h5>\n                            What is System testing?\n                        </h5>\n                        <p>\n                            Testing which is based on overall requirements specification and it covers all combined parts of a system. It is also a black box type of testing.  \n                        </p>\n                        <h5>\n                            What is Black box testing?\n                        </h5>\n                        <p>\n                            It is a test where a tester performs testing without looking into the code. OR A testing method where the application under test is viewed as a black box and the internal behavior of the program is completely ignored. Testing occurs based upon the external specifications. Also known as behavioral testing, since only the external behavior of the program is evaluated and analyzed.\n                        </p>\n                        <h5>\n                            What is White box testing?\n                        </h5>\n                        <p>\n                            It is a test where a tester looks into the code and performs the testing. \n                        </p>\n                        <h5>\n                            What is Non-Functional Testing?\n                        </h5>\n                        <p>\n                            Testing the application against clients and performance requirement. Non-Functioning testing is done based on the requirements and test scenarios defined by the client.\n                        </p>\n                        <h5>\n                            What is Functional Testing?\n                        </h5>\n                        <p>\n                            Testing the application against business requirements. Functional testing is done using the functional specifications provided by the client or by using the design specifications like use cases provided by the design team.\n                        </p>\n                        <p>\n                            All It is a test to check whether each and every functionality of that application is working as per the requirement. It is a major test where 80% of the tests are done. In this test, the Test Cases are ‘executed’.\n                        </p>\n                        <h5>\n                            What is Load testing?\n                        </h5>\n                        <p>\n                            It is a test to check the user’s response time of the number of users using any one scenario (single business process) of the same application at the same time.\n                        </p>\n                        <h5>\n                            What is Stress testing?\n                        </h5>\n                        <p>\n                            In this type of testing the application is tested against heavy load such as complex numerical values, a large number of inputs, the large number of queries etc. which checks for the stress/load the applications can withstand.\n                        </p>\n                        <h5>\n                            What is Performance testing?\n                        </h5>\n                        <p>\n                            It is a test to check the user’s response time of number of users using multiple scenarios (multiple business processes) of the same application at the same time.\n                        </p>\n                        <h5>\n                            What is Negative Testing?\n                        </h5>\n                        <p>\n                            Testing the system or application using negative data is called negative testing, for example, testing password entering 6 characters where it should be 8 characters should display a message.\n                            <br />\n                            When we test an application by putting negative values (instead of actual values), then the system should not allow the other values rather than the actual value.  The system should give a message that the value is not correct.  This is called negative testing. \n                        </p>\n                        <h5>\n                            What is the difference between Load Testing and Performance Testing?\n                        </h5>\n                        <p>\n                            Basically, Load, Stress and Performance Testing are the same. However, Load testing is the test to check the users’ response time of the number of users of any one scenario of the application whereas Performance Testing is the test to check the user response time for multiple scenarios of the same application.\n                        </p>\n                        <h5>\n                            How do you make sure that it is quality software?\n                        </h5>\n                        <p>\n                            There is a certain process how the quality of software is guaranteed (insured). If is defined by the ‘exit criteria’. (What it means is, a QA Manager writes a document called Test Strategy. This Test Strategy defines the ‘exit criteria’.) Exit Criteria gives the measurement, for example, in order to confirm the quality, how many critical defects, high defects, medium defect and low defect are acceptable? These are all defined in the exit criteria. (Normally in practice, for a quality software, there should no critical defects (0 critical), no high defect (0 high), no medium defect (0 medium) and may be 1 low defect)\n                        </p>\n                        <h5>\n                            When should testing start in a project? Why?  (Manual and Automating for Both of them)\n                        </h5>\n                        <p>We should start testing as soon as the following things are ready:</p>\n                        <ol>\n                            <li>It depends on the project by project but comonly in agile project following bellow:</li>\n                            <li>Test Case is ready</li>\n                            <li>Test Data is ready</li>\n                            <li>Test environment is ready to test</li>\n                            <li>Build is ready</li>\n                        </ol>\n                        <h5>\n                            How would you ensure that you have covered 100% testing?\n                        </h5>\n                        <p>\n                            The testing coverage is defined by exit criteria or team agreenment or Defination of Done (There is exit criteria and entry criteria in the Test Strategy). For example, if the exit criteria/Team Agreement/Defination Done say's “The software will be acceptable to the client only if there are no critical defects, no high defects, no medium defects and only two low defects”, then all the critical, high, the medium should be zero. Only 2 low defects are ac\n                        </p>\n                        <ul>\n                            <li>Dafination of Done: Story Level</li>\n                            <li>Dafination of Done: Sub-Task Level</li>\n                            <li>Dafination of Done: Feature Level</li>\n                            <li>Dafination of Done: Releasable Feature Set Level</li>\n                        </ul>\n                        <h5>\n                            What is exact difference between use case, test scenario, and test case?\n                        </h5>\n                        <ol>\n                            <li>Use case: Use Cases represents functional requirements and functional requirements need to be tested.</li>\n                            <li>Test Case: A set of test data and test programs (test scripts) and their expected results. A test case validates one or more system requirements and generates a pass or fail. It would have the following elements 1. Pre-Conditions 2. Steps to execute 3. Expected behavior 4. Pass/Fail criteria</li>\n                            <li>Test Scenario: A Test Scenario is a business requirement to be tested. A set of test cases that ensure that the business process flows are tested from end to end. They may be independent tests or a series of tests that follow each other, each dependent on the output of the previous one A test scenario can have more than one test case</li>\n                        </ol>\n                        <h5>\n                            What is Cross Browser Testing?\n                        </h5>\n                        <p>\n                            Cross Browser Testing is a process to test web applications across multiple browsers. Cross browser testing involves checking compatibility of your application across multiple web browsers and ensures that your web application works correctly across different web browsers.\n                        </p>\n                        <h5>\n                            Do you have experience in compatibility testing? How did you perform compatibility testing?\n                        </h5>\n                        <p>\n                            Yes, I did. For ATT- I have tested the application in different browser Firefox, chrome, IE, safari and opera also in different operating system windows, Linux and Mac. \n                        </p>\n                        <h5>\n                            What is accessibility testing?\n                        </h5>\n                        <p>\n                            Accessibility testing is a type of systems testing designed to determine whether individuals with disabilities will be able to use the system in question, which could be software, hardware, or some other type of system. Disabilities encompass a wide range of physical problems, including learning disabilities as well as difficulties with sight, hearing, and movement.\n                            <br />\n                            The significance of this testing is to verify both usability and accessibility.\n                        </p>\n                        <h5>\n                            What is End-to-End Testing?\n                        </h5>\n                        <p>\n                            End-to-end testing is a technique used to test whether the flow of an application right from start to finish is behaving as expected. The purpose of performing end-to-end testing is to identify system dependencies and to ensure that the data integrity is maintained between various system components and systems. \n                            <br />\n                            The entire application is tested for critical functionalities such as communicating with the other systems, interfaces, database, network, and other applications.\n                        </p>\n                        <p>Give an Example?</p>\n                        <p>\n                            Yes, I did. Like in att.com, whenever customer click on the product category page, the product category page will be display all the product, then customer select a product it will navigate customer on the select item page, after that when customer select add to card it will show to customer the order place form, when customer place the order then shopping cart will be shown empty and order details page will be displayed where customer can see the order details this is end to end testing.\n                        </p>\n                        <h5>\n                            What is Black box testing?\n                        </h5>\n                        <p>\n                            Black box testing is a test where a tester performs testing without looking into the code. OR A testing method where the application under test is viewed as a black box and the internal behavior of the program is completely ignored. Testing occurs based upon the external specifications. Also known as behavioral testing, since only the external behavior of the program is evaluated and analyzed.\n                        </p>\n                        <p>\n                            The functionality of an application based on the specifications. Independent Testing Team usually performs this type of testing during the software testing life cycle.\n                        </p>\n                        <h5>\n                            What is Boundary Testing?\n                        </h5>\n                        <p>\n                            Boundary value analysis is a type of black box or specification based testing technique in which tests are performed using the boundary values.\n                        </p>\n                        <p>\n                            Example: An exam has a pass boundary at 50 percent, merit at 75 percent and distinction at 85 percent. The Valid Boundary values for this scenario will be as follows:\n                        </p>\n                        <ul>\n                            <li>49, 50 – for pass</li>\n                            <li>74, 75 – for merit</li>\n                            <li>84, 85 – for distinction</li>\n                            <p>\n                                Boundary values are validated against both the valid boundaries and invalid boundaries.\n                                <br />\n                                The Invalid Boundary Cases for the above example can be given as follows:\n                            </p>\n                            <li>0 – for lower limit boundary value</li>\n                            <li>101 – for upper limit boundary value</li>\n                        </ul>\n                        <h5>\n                            What is Grey Box Testing?\n                        </h5>\n                        <p>\n                            Grey Box testing is testing technique performed with limited information about the internal functionality of the system. Grey Box testers have access to the detailed design documents along with information about requirements.\n                        </p>\n                        <p>BlacBox+WhiteBox = GrayBox</p>\n                        <p>Gray-box testing Techniques: Regression testing</p>\n                        <h5>\n                            What is Root cause analysis?\n                        </h5>\n                        <p>\n                            Root cause analysis (RCA) is a systematic process for identifying “root causes” of problems or events and an approach for responding to them. RCA is based on the basic idea that effective management requires more than merely “putting out fires” for problems that develop, but finding a way to prevent them.\n                        </p>\n                        <p>Goals</p>\n                        <p>The primary goal of using RCA is to analyze problems or events to identify:</p>\n                        <ol>\n                            <li>What happened</li>\n                            <li>How it happened</li>\n                            <li>Why it happened…so that</li>\n                        </ol>\n                        <p>Actions for preventing reoccurrence are developed</p>\n                        <p>Benefits</p>\n                        <ul>\n                            <li>Identify barriers and the causes of problems, so that permanent solutions can be found.</li>\n                            <li>Develop a logical approach to problem-solving, using data that already exists in the agency.</li>\n                            <li>Identify current and future needs for organizational improvement.</li>\n                            <li>Establish repeatable, step-by-step processes, in which one process can confirm the results of another.</li>\n                        </ul>\n                        <h5>\n                            What is Client/Server Architecture mean?\n                        </h5>\n                        <p>\n                            These terms refer to the two processes or two applications which will be communicating with each other to exchange some information. One of the two processes acts as a client process and another process acts as a server.\n                        </p>\n                        <h5>\n                            What is Client Server Application?\n                        </h5>\n                        <p>\n                            Client Server Application is a relationship in which client makes a request to the server and server fulfill the request as per client requirement. Like\n                        </p>\n                        <p>\n                            The client makes a request through the internet to the server and server store the data process the request from the client.\n                        </p>\n                        <h5>\n                            From your resume, I see that you have been working in one place for a very short period of time. This raises my questions why. Can you explain why?\n                        </h5>\n                        <p>\n                            As a consultant, I am hired for a certain period of time, normally for 6 months to 1 year. Once the project is over, I needed to move to another project. That’s why you see me in the resume jumping frequently here and there. \n                        </p> \n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    \n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resManual;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resLinux = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAppium-'>\n                        <h1>Working in progress...</h1> \n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resLinux;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resSql = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAppium-'>\n                        <h1>Working in progress...</h1>\n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resSql;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resNetwork = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAppium-'>\n                        <h1>Working in progress...</h1>\n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resNetwork;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport utils from '../../../utilities/utils.json';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resHtml = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div>\n                        <h5>\n                            Basic & Advance Web Development {utils.courseOutline}\n                        </h5>\n                        <h5>List of HTML Tags:</h5>\n                        <table>\n                            <tr>\n                                <th>Tags</th>\n                                <th>Description</th>\n                            </tr>\n                            <tr>\n                                <td>{utils.tag.comment}</td>\n                                <td>Defines a comment</td>\n                            </tr>\n                            <tr>\n                                <td>{utils.tag.doctype}</td>\n                                <td>Defines the document type</td>\n                            </tr>\n                            <tr>\n                                <td>{utils.tag.a}</td>\n                                <td>Defines a hyperlink</td>\n                            </tr>\n                            <tr>\n                                <td>{utils.tag.abbr}</td>\n                                <td>Defines an abbreviation or an acronym</td>\n                            </tr>\n                            <tr>\n                                <td>{utils.tag.address}</td>\n                                <td>Defines contact information for the author/owner of a document</td>\n                            </tr>\n                            <tr>\n                                <td>{utils.tag.area}</td>\n                                <td>Defines an area inside an image map</td>\n                            </tr>\n                        </table>\n                        <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </div>\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2} >\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resHtml;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resCss = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAppium-'>\n                        <h1>Working in progress...</h1>\n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resCss;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resJavascript = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAppium-'>\n                        <h1>Working in progress...</h1>\n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resJavascript;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resJava = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAppium-'>\n                        <a href='https://www.javatpoint.com/java-tutorial'>Java Resources</a>\n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resJava;","import React from 'react';\nimport '../style/resSelenium.css';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst approch_1 = \"//div[@id='main']/table[1]/tbody/tr[1]/th[1]\";\nconst approach_2 = \"//*[@id='main']/table[1]/tbody\";\nconst approach_3_1 = \"//*[@id='username_123′]\";\nconst approach_3_2 = \"//*[contains(@id,'username')]\";\nconst approach_3_3 = \"//*[starts-with(@id,'user')]′] \";\n\nconst selenium = () => {\n    return(\n        <div className = 'page-tab-body'>\n          <Grid className='page-tab-grid'>\n            <Cell className='page-tab-first-col' col={12}>\n              <div>\n                <h1>Selenium WebDriver Commands</h1>\n              \n                <ol>\n                  <h5><u>Browser Commands</u></h5>\n                  <li>\n                    <strong> get(String arg0): void </strong> – This method Load a new web page in the current browser window.\n                  </li>\n                  <li>\n                    <strong>getTitle(): String</strong> – This method fetches the Title of the current page.\n                  </li>\n                  <li>\n                    <strong>getCurrentUrl(): String</strong> – This method fetches the string representing the Current URL which is opened in the browser.\n                  </li>\n                  <li>\n                    <strong>getPageSource(): String</strong> – This method returns the Source Code of the page.\n                  </li>\n                  <li>\n                    <strong>close(): void</strong> – This method Close only the current window the WebDriver is currently controlling. \n                  </li>\n                  <li>\n                    <strong>quit(): void</strong> – This method Closes all windows opened by the WebDriver. \n                  </li>\n                </ol>\n                <ol>\n                  <h5><u>Selenium Navigation Commands</u></h5>\n                  <li>\n                    <strong>navigate().to(String arg0): void</strong> – This method Loads a new web page in the current browser window.\n                  </li>\n                  <li>\n                    <strong>navigate().forward() : void</strong> – This method does the same operation as clicking on the Forward Button of any browser.\n                  </li>\n                  <li>\n                    <strong>navigate().back() : void</strong> – This method does the same operation as clicking on the Back Button of any browser. \n                  </li>\n                  <li>\n                    <strong>navigate().refresh() : void</strong> – This method Refresh the current page. It neither accepts nor returns anything.\n                  </li>\n                </ol>\n                <ol>\n                  <h5><u>Selenium WebElement Commands</u></h5>\n                  <li>\n                    <strong>clear( ) : void </strong> – If this element is a text entry element, this will clear the value. \n                  </li>\n                  <li>\n                    <strong>sendKeys(CharSequence… keysToSend ) : void</strong> – This simulates typing into an element, which may set its value.\n                  </li>\n                  <li>\n                    <strong>click( ) : void</strong> – This simulates the clicking of any element. Accepts nothing as a parameter and returns nothing.\n                  </li>\n                  <li>\n                    <strong>isDisplayed( ) : boolean</strong> – This method determines if an element is currently being displayed or not.\n                  </li>\n                  <li>\n                    <strong>isEnabled( ) : boolean</strong> – This determines if the element currently is Enabled or not?\n                  </li>\n                  <li>\n                    <strong>isSelected( ) : boolean</strong> – Determine whether or not this element is selected or not?\n                  </li>\n                  <li>\n                    <strong>submit( ) : void</strong>– This method works well/better than the click() if the current element is a form, or an element within a form. \n                  </li>\n                  <li>\n                    <strong>getText( ) : String</strong> – This method will fetch the visible (i.e. not hidden by CSS) innerText of the element.\n                  </li>\n                  <li>\n                    <strong>getTagName( ) : String</strong> – This method gets the tag name of this element. \n                  </li>\n                  <li>\n                    <strong>getCssvalue( ) : String</strong> – This method Fetch CSS property value of the give element.\n                  </li>\n                  <li>\n                    <strong>getAttribute(String Name) : String</strong> – This method gets the value of the given attribute of the element.\n                  </li>\n                  <li>\n                    <strong>getSize( ) : Dimension</strong> – This method fetch the width and height of the rendered element. \n                  </li>\n                  <li>\n                    <strong>getLocation( ) : Point</strong> – This method locate the location of the element on the page.\n                  </li>\n                </ol>\n                <h5><u>How to Find Element in Selenium? Finding elements in Selenium WebDriver is done by using the findElement(By.locator()) method</u></h5>\n                <ol>\n                  <li>\n                    <strong>id(String id): By</strong> – This is the most efficient and preferred way to find an element in Selenium, as most of the time IDs are unique.\n                  </li>\n                  <li>\n                    <strong>name(String name): By </strong>– This is also an efficient way to locate an element but again the problem is same as with ID that UI developer makes it having non-unique names on a page or auto-generating the names. \n                  </li>\n                  <li>\n                    <strong>className(String className): By</strong> – This finds elements based on the value of the CLASS attribute.\n                  </li>\n                  <li>\n                    <strong>tagName(String name): By</strong> – With this, you can find elements by their TAGNAMES.\n                  </li>\n                  <li>\n                    <strong>linkText(String linkText) : By</strong> – With this you can find elements of “a” tags(Link) with the link names. \n                  </li>\n                  <li>\n                    <strong>partialLinkText(String linkText) : By</strong> – With this you can find elements of “a” tags(Link) with the partial link names.\n                  </li>\n                  <li>\n                    <strong>xpath(String xpathexpression) : By</strong> – It is the most popular and majorly used locating element technique or the easiest way to locate an element in WebDriver. \n                  </li>\n                  <li>\n                    <strong>cssSelector(String cssexpression) : By</strong> - Locates elements matching a CSS selector.\n                  </li>\n                </ol>\n                <ol>\n                  <h5><u>CheckBox & Radio Button Operations</u></h5>\n                  <li>\n                    <strong>By ID</strong>\n                  </li>\n                  <li>\n                    <strong>With IsSelected</strong>\n                  </li>\n                  <li>\n                    <strong>With Value</strong>\n                  </li>\n                  <li>\n                    <strong>By CssSelector</strong>\n                  </li>\n                </ol>\n                <ol>\n                  <h5><u>DropDown & Multiple Select Operations | You can choose it by ID, Name, CSS & Xpath, etc.</u></h5>\n                  <li>\n                    <strong>org.openqa.selenium.support.ui.Select</strong> package and to use it we need to create a new Select Object of class Select.\n                  </li>\n                  <li>\n                    <strong>Select oSelect = new Select());</strong>\n                  </li>\n                  <li>\n                    <strong>selectByVisibleText(String arg0) : void</strong> – It is very easy to choose or select an option given under any dropdowns and multiple selection boxes with selectByVisibleText method. \n                  </li>\n                  <li>\n                    <strong>selectByIndex(int arg0) : void</strong> – It is almost the same as selectByVisibleText but the only difference here is that we provide the index number of the option here rather the option text.\n                  </li>\n                  <li>\n                    <strong>selectByValue(String arg0) : void</strong> – It is again the same as what we have discussed earlier, the only difference in this is that it asks for the value of the option rather than the option text or index.\n                  </li>\n                  <li>\n                    <strong>getOptions( ) : List(WebElement)</strong> – This gets the all options belonging to the Select tag. \n                  </li>\n                  <li>\n                    <strong>deselectAll( ) : void</strong> – Clear all selected entries. This is only valid when the SELECT supports multiple selections.\n                  </li>\n                  <li>\n                    <strong>deselectByIndex(int arg0) : void</strong> – Deselect the option at the given index.\n                  </li>\n                  <li>\n                    <strong>deselectByValue(String arg0) : void</strong> – Deselect all options that have a value matching the argument.\n                  </li>\n                  <li>\n                    <strong>deselectByVisibleText(String arg0) : void</strong> – Deselect all options that display text matching the argument.\n                  </li>\n                  <li>\n                    <strong>isMultiple( ) : boolean</strong> – This tells whether the SELECT element support multiple selecting options at the same time or not.\n                  </li>\n                </ol>\n                <ol>\n                  <h5><u>Handling Web Tables, Frames, And Dynamic Elements</u></h5>\n                  <p>This tutorial consists of 3 different topics and their handling mechanisms in selenium script.</p>\n                  <li>\n                    <strong>Web Tables/HTML tables</strong>\n                  </li>\n                  <li>\n                    <strong>Frames</strong>\n                  </li>\n                  <li>\n                    <strong>Dynamic elements</strong>\n                  </li>\n                </ol>\n                <p><strong>Approach #1:</strong> Below is the xpath of one of the cell in html table.</p>\n                <p>\n                  <pre>\n                    <code>\n                      {approch_1}\n                    </code>\n                  </pre>\n                </p>\n            \n                <p><strong>Approach #2:</strong> The first approach is best suitable for the table which doesn’t change its dimensions and always remains the same. Above approach will not be a perfect solution for dynamically changing web tables.</p>\n                <p><code>{approach_2}</code></p>\n\n                <p>\n                  <strong>\n                    Approach #3:\n                    </strong> \n                  In this section we will learn different ways to handle dynamic element and construct generic Xpath.\n                  <br />\n                  In few scenarios, element attributes change dynamically. It can be ‘id’, ’name’ etc.\n                </p>\n                <p>\n                  <code>{approach_3_1} </code> <br />\n                  <code> {approach_3_2}</code> <br />\n                  <code>{approach_3_3} </code>\n                </p>\n                <ol>\n                  <h5><strong><u>Class Actions</u></strong></h5>\n                  <li>\n                    <a href='https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/interactions/Actions.html#Actions-org.openqa.selenium.interactions.Keyboard-'><strong>Actions(Keyboard keyboard)</strong></a>\n                  </li>\n                  <li>\n                  <a href='https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/interactions/Actions.html#Actions-org.openqa.selenium.interactions.Keyboard-org.openqa.selenium.interactions.Mouse-'><strong>Actions(Keyboard keyboard, Mouse mouse)</strong></a>\n                  </li>\n                  <li>\n                  <a href='https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/interactions/Actions.html#Actions-org.openqa.selenium.WebDriver-'><strong>Actions(WebDriver driver)</strong></a>\n                  </li>\n                  <li>\n                    <strong>build() : Action</strong> \n                    Generates a composite action containing all actions so far, ready to be performed (and resets the internal builder state, so subsequent calls to build() will contain fresh sequences).\n                  </li>\n                  <li>\n                    <strong>click() : Action</strong> – Clicks at the current mouse location.\n                  </li>\n                  <li>\n                    <strong>click(WebElement target) : Action</strong> – Clicks in the middle of the given element.\n                  </li>\n                  <li>\n                    <strong>clickAndHold() : Action</strong> – Clicks (without releasing) at the current mouse location.\n                  </li>\n                  <li>\n                    <strong>clickAndHold(WebElement target) : Action</strong> – Clicks (without releasing) in the middle of the given element.\n                  </li>\n                  <li>\n                    <strong>contextClick() : Action</strong> – Performs a context-click at the current mouse location.\n                  </li>\n                  <li>\n                    <strong>contextClick(WebElement target) : Action</strong> – Performs a context-click at middle of the given element.\n                  </li>\n                  <li>\n                    <strong>doubleClick() : Action</strong> – Performs a double-click at the current mouse location.\n                  </li>\n                  <li>\n                    <strong>doubleClick(WebElement target) : Action</strong> – Performs a double-click at middle of the given element.\n                  </li>\n                  <li>\n                    <strong>dragAndDrop(WebElement source, WebElement target) : Action</strong> – A convenience method that performs click-and-hold at the location of the source element, moves to the location of the target element, then releases the mouse.\n                  </li>\n                  <li>\n                    <strong>dragAndDropBy(WebElement source, int xOffset, int yOffset) : Action</strong> – A convenience method that performs click-and-hold at the location of the source element, moves by a given offset, then releases the mouse.\n                  </li>\n                  <li>\n                    <strong>keyDown(java.lang.CharSequence key) : Action</strong> – Performs a modifier key press.\n                  </li>\n                  <li>\n                    <strong>keyDown(WebElement target, java.lang.CharSequence key) : Action</strong> – Performs a modifier key press after focusing on an element.\n                  </li>\n                  <li>\n                    <strong>keyUp(java.lang.CharSequence key) : Action</strong> – Performs a modifier key release.\n                  </li>\n                  <li>\n                    <strong>keyUp(WebElement target, java.lang.CharSequence key) : Action</strong> – Performs a modifier key release after focusing on an element.\n                  </li>\n                  <li>\n                    <strong>moveByOffset(int xOffset, int yOffset) : Action</strong> – Moves the mouse from its current position (or 0,0) by the given offset.\n                  </li>\n                  <li>\n                    <strong>moveToElement(WebElement target) : Action</strong> – Moves the mouse to the middle of the element.\n                  </li>\n                  <li>\n                    <strong>moveToElement(WebElement target, int xOffset, int yOffset) : Action</strong> – Moves the mouse to an offset from the top-left corner of the element.\n                  </li>\n                  <li>\n                    <strong>pause(java.time.Duration duration) : Action</strong>\n                  </li>\n                  <li>\n                    <strong>pause(long pause) : Action</strong> – Performs a pause.\n                  </li>\n                  <li>\n                    <strong>perform() : Action</strong> – A convenience method for performing the actions without calling build() first.\n                  </li>\n                  <li>\n                    <strong>release() : Action</strong> – Releases the depressed left mouse button at the current mouse location.\n                  </li>\n                  <li>\n                    <strong>release(WebElement target) : Action</strong> – Releases the depressed left mouse button, in the middle of the given element.\n                  </li>\n                  <li>\n                    <strong>sendKeys(java.lang.CharSequence... keys) : Action</strong> – De\n                  </li>\n                  <li>\n                    <strong>deselectByIndex(int arg0) : Action</strong> – Sends keys to the active element.\n                  </li>\n                  <li>\n                    <strong>sendKeys(WebElement target, java.lang.CharSequence... keys) : Action</strong> – Equivalent to calling: Actions.click(element).sendKeys(keysToSend).\n                  </li>\n                  <li>\n                    <strong>tick(Action action) : Action</strong>\n                  </li>\n                  <li>\n                    <strong>tick(Interaction... actions) : Action</strong>\n                  </li>\n                  <hr />\n                </ol>\n                  \n                  <h5>\n                    What are the list of Wait Command in Selenium? example?\n                  </h5>\n                  <p>There are 3 types of Synchronization or Wait statement in selenium WebDriver:</p>\n                  <ol>\n                    <li>Implicit Wait</li>\n                    <li>Explicit Wait </li>\n                    <li>Fluent Wait</li>\n                    <br />\n                  </ol>\n                  <ol>\n                    <li>\n                      <strong>Implicit Wait in Selenium: </strong>\n                      <span>\n                        Sets internally a timeout that will be used for all consecutive Web Element searches. It will try look up the element repeatedly for the specified amount of time before throwing a NoSuchElementException if the element could not have been found. It does only this and can't be forced into anything else - it waits for elements to show up.\n                      </span>\n                      <p className='pt2'>\n                        Implicit Wait directs the Selenium WebDriver to wait for a certain measure of time before throwing an exception. Once this time is set, WebDriver will wait for the element before the exception occurs.\n                      </p>\n                      <p>\n                        Once the command is in place, Implicit Wait stays in place for the entire duration for which the browser is open. Its default setting is 0, and the specific wait time needs to be set by the following protocol.\n                      </p>\n                      <pre>\n                        <code>\n                          driver.manage().timeouts().implicitlywait(20L,Timeunit.sec);\n                        </code>\n                      </pre>\n                    </li>\n                    <li>\n                      <strong>Explicit Wait in Selenium: </strong>\n                      <span>\n                        Just Wait is a one-timer used for a particular search. I can set it up wait, for any condition I might like. Usually, I can use some of the prebuilt Expected Conditions to wait for elements to become clickable, visible, invisible, etc., or just write my own condition that suits my code needs. (when a particular element takes more than a minute to load)\n                      </span>\n                      <p className='pt2'>\n                        By using Explicit Wait command, the WebDriver is directed to wait until a certain condition occurs before proceeding with executing the code.\n                      </p>\n                      <p>\n                        Setting Explicit Wait is important in cases where there are certain elements that naturally take more time to load. If one sets an implicit wait command, then the browser will wait for the same time frame before loading every web element. This causes an unnecessary delay in executing the test script.\n                      </p>\n                      <p>\n                        Explicit wait is more intelligent, but can only be applied for specified elements. However, it is an improvement on implicit wait since it allows the program to pause for dynamically loaded Ajax elements.\n                      </p>\n                      <p>\n                        In order to declare explicit wait, one has to use “ExpectedConditions”. The following Expected Conditions can be used in Explicit Wait.\n                      </p>\n                      <ul>\n                        <li>alertIsPresent()</li>\n                        <li>elementSelectionStateToBe()</li>\n                        <li>elementToBeClickable()</li>\n                        <li>elementToBeSelected()</li>\n                        <li>frameToBeAvaliableAndSwitchToIt()</li>\n                        <li>invisibilityOfTheElementLocated()</li>\n                        <li>invisibilityOfElementWithText()</li>\n                        <li>presenceOfAllElementsLocatedBy()</li>\n                        <li>presenceOfElementLocated()</li>\n                        <li>textToBePresentInElement()</li>\n                        <li>textToBePresentInElementLocated()</li>\n                        <li>textToBePresentInElementValue()</li>\n                        <li>titleIs()</li>\n                        <li>titleContains()</li>\n                        <li>visibilityOf()</li>\n                        <li>visibilityOfAllElements()</li>\n                        <li>visibilityOfAllElementsLocatedBy()</li>\n                        <li>visibilityOfElementLocated()</li>\n                      </ul>\n                      <p className='pt2'>Initialize A Wait Object using WebDriverWait Class.</p>\n                      <pre>\n                        <code>\n                          WebDriverWait wait = new WebDriverWait(driver,30);<br />\n                          wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[contains(text(),'COMPOSE')]\")));\n                        </code>\n                      </pre>\n\n                    </li>\n                    <li>\n                      <strong>Fluent Wait in Selenium: </strong>\n                      <span>\n                        Let’s say I have an element which sometimes appears in just 1 second and some time it takes minutes to appear. In that case, I have been using fluent wait, as this will try to find element again and again until it finds it or until the final timer runs out.\n                      </span>\n                      <p className='pt2'>\n                        The Fluent Wait command defines the maximum amount of time for Selenium WebDriver to wait for a certain condition to appear. It also defines the frequency with which WebDriver will check if the condition appears before throwing the “ElementNotVisibleException”.\n                      </p>\n                      <p>\n                        To put it simply, Fluent Wait looks for a web element repeatedly at regular intervals until timeout happens or until the object is found.\n                      </p>\n                      <p> \n                        Fluent Wait commands are most useful when interacting with web elements that can sometimes take more time than usual to load. This is largely something that occurs in Ajax applications.\n                      </p>\n                      <p>\n                        While using Fluent Wait, it is possible to set a default polling period as needed. The user can configure the wait to ignore any exceptions during the polling period.\n                      </p>\n                      <pre>\n                        <code>\n                        Wait wait = new FluentWait (WebDriver)(driver) <br />\n                          .withTimeout(50, TimeUnit.SECONDS) <br />\n                          .pollingevery(3, TimeUnit.SECONDS) <br />\n                          .ignoring(NoSuchElementException.class); \n                        </code>\n                      </pre>\n                    </li>\n                  </ol>\n                  <h5>\n                    What is an Exception?\n                  </h5>\n                  <p>\n                    “Exception” is a standard term used by software programmers regardless of any programming language that is used to write the code. “Exception” as the name suggests is an unusual event or an uncommon case that disrupts the normal flow of program execution.\n                  </p>\n                  <p>\n                    There may be several reasons behind the occurrence of exceptions which indicate the halt in the program flow. An exception object is created when an exception is encountered, which contains debugging information such as the line number, the type of Exception, the method hierarchy. Once the exception object is created and handed over to the runtime environment, this process is called “Throwing the Exception.”\n                  </p>\n                  <p>\n                    The Exceptions are classified mainly into two types: Checked Exception and Unchecked Exception\n                  </p>\n                  <ul>\n                    <li><strong>Checked Exceptions:</strong>\n                     These exceptions are handled while writing the code itself before the compilation of the code, and hence they are examined at the compile time.\n                    </li>\n                    <li><strong>Unchecked Exceptions:</strong>\n                      These exceptions get thrown at run time and are more catastrophic as compared to Checked Exception.\n                    </li>\n                    <h5>\n                      What is Exception Handling in Selenium?\n                    </h5>\n                    <p>\n                      Exception handling is a process or a mechanism that detects and resolves runtime exceptions and communication errors in Selenium.\n                    </p>\n                    <h5>\n                      10 Common Exceptions in Selenium WebDriver\n                    </h5>\n                    <p>\n                      One can find a complete list of Selenium WebDriver Exceptions in the documentation given by Selenium, but below are a few standard Selenium exceptions faced while running a test :\n                    </p>\n                    <ol>\n                      <li><strong>ElementNotVisibleException: </strong>\n                        In spite of the element being present in the DOM, it is not visible (can not be interactive). For example, elements defined in HTML with type =”hidden”\n                      </li>\n                      <li><strong>ElementNotSelectableException: </strong>\n                        An element is disabled (can not be clicked/selected) in spite of being present in the DOM\n                      </li>\n                      <li><strong>NoSuchElementException:</strong>\n                        Webdriver is not able to determine the elements during runtime, i.e., the FindBy method cannot find a particular component\n                      </li>\n                      <li><strong>NoSuchFrameException: </strong>\n                        Webdriver attempts to switch to an invalid frame, which is unavailable\n                      </li>\n                      <li><strong>NoAlertPresentException:</strong>\n                        Webdriver is trying to switch to an invalid alert, which is unavailable\n                      </li>\n                      <li><strong>NoSuchWindowException: </strong>\n                        Webdriver is trying to switch to an invalid window, which is unavailable\n                      </li>\n                      <li><strong>StaleElementReferenceException:</strong>\n                        The referenced element is no longer present on the DOM page (a reference to a component is now Stale). For example, the item belongs to a different frame than the current one or the user has navigated away to another page\n                      </li>\n                      <li><strong>SessionNotFoundException:</strong>\n                        Webdriver is acting immediately after ‘quitting’ the browser\n                      </li>\n                      <li><strong>TimeoutException: </strong>\n                        The command did not complete in the specified time. For example, the element didn’t display at the specified time. This is especially encountered when working with waits\n                      </li>\n                      <li><strong>WebDriverException:</strong>\n                        Webdriver is acting immediately after ‘closing’ the browser\n                      </li>\n                    </ol>\n                    <p>\n                      Now, as we are aware of the common Exceptions that one can face in Selenium WebDriver, the next step is to understand “How to handle those Exceptions?”\n                    </p>\n                    <h5>\n                      Handling Exceptions In Selenium WebDriver\n                    </h5>\n                    <p>\n                      Following are a few standard ways using which one can handle Exceptions in Selenium WebDriver:\n                    </p>\n                    <p>\n                      <stron>Try-catch:</stron>\n                      <span>\n                        This method can catch Exceptions by using a combination of the try and catch keywords. Try indicates the start of the block, and Catch is placed at the end of the try block to handle or resolve the Exception. The code that is written within the Try/Catch block is referred to as “protected code.” The following code represents the syntax of Try/Catch block –\n                      </span>\n                      <pre>\n                        <code>\n                          try{\n                              // Some code\n                            }\n                          catch(Exception e){\n                              // Code for Handling the exception\n                            }\n                        </code>\n                      </pre>\n                    </p>\n                    <p>\n                      <strong>\n                        Multiple catch blocks: \n                      </strong>\n                      <span>\n                        There are various types of Exceptions, and one can expect more than one exception from a single block of code. Multiple catch blocks are used to handle every kind of Exception separately with a separate block of code. One can use more than two catch blocks, and there is no limitation on the number of catch blocks. The code below represents the syntax of multiple catch blocks –\n                      </span>\n                      <pre>\n                        <code>\n                          try{\n                                //Some code\n                            }\n                          catch(ExceptionType1 e1){\n                              //Code for Handling the Exception 1\n                            }\n                          catch(ExceptionType2 e2){\n                              //Code for Handling the Exception 2\n                            }\n                        </code>\n                      </pre>\n                    </p>\n                    <p>\n                      <strong>\n                        Throw/Throws:\n                      </strong>\n                      <span>\n                        When a programmer wants to generate an Exception explicitly, the Throw keyword is used to throw Exception to runtime to handle it. When a programmer is throwing an Exception without handling it, then he/she needs to use Throws keyword in the method signature to enable the caller program to understand the exceptions that might be thrown by the method. The syntax for Throws is as follows:\n                      </span>\n                      <pre>\n                        <code>\n                            public static void anyFunction() throws Exception{\n                              //try{\n                                  // write your code here\n                                }\n                              catch (Exception e){\n                                    // Do whatever you wish to do here\n\n                                    // Now throw the exception back to the system\n                                    //throw(e);\n                                }\n                              }\n                        </code>\n                      </pre>\n                    </p>\n                    <p>\n                      <strong>\n                        Multiple Exceptions:\n                      </strong>\n                      <span>\n                        One can mention various Exceptions in the throws clause. Refer to the example below:\n                      </span>\n                      <pre>\n                        <code>\n                            public static void anyFunction() throws ExceptionType1, ExceptionType2{\n                              //try{\n                                  // write your code here\n                                }\n                              catch (ExceptionType1 e1){\n                                  // Code to handle exception 1\n                                }\n                              catch (ExceptionType1 e2){\n                                  // Code to handle exception 2\n                                }\n                              }\n                        </code>\n                      </pre>\n                    </p>\n                    <p>\n                      <strong>\n                        Finally:\n                      </strong>\n                      <span>\n                        The Final keyword is used to create a block of code under the try block. This final code block always executes irrespective of the occurrence of an exception\n                      </span>\n                      <pre>\n                        <code>\n                            try{\n                                //Protected code\n                              }\n                            catch(ExceptionType1 e1){\n                                //Catch block\n                              }\n                            catch(ExceptionType2 e2){\n                                //Catch block\n                              }\n                            catch(ExceptionType3 e3){\n                                //Catch block\n                              }\n\n                            finally{\n                                //The finally block always executes.\n                              }\n                        </code>\n                      </pre>\n                      </p>\n                    <p>\n                      One can also use the following methods to display Exception Information:\n                    </p>\n                    <p>\n                      <strong>\n                        printStackTrace(): \n                      </strong>\n                      <span>\n                        It prints the stack trace, name of the exception, and other useful description\n                      </span>\n                    </p>\n                    <p>\n                      <strong>\n                        toString():\n                      </strong>\n                      <span>\n                        It returns a text message describing the exception name and description\n                      </span>\n                    </p>\n                    <p>\n                      <strong>\n                        getMessage():\n                      </strong>\n                      <span>\n                        It displays the description of the exception\n                      </span>\n                    </p>\n                  </ul>\n                  <h5>\n                    Conclusion:\n                  </h5>\n                  <ul>\n                    <li>Exception handling is a very crucial part of every Selenium Script</li>\n                    <li>Exceptions can not be ignored as they disrupt the normal execution of programs</li>\n                    <li>One can write optimal and robust scripts by handling the Exceptions in unique ways</li>\n                    <li>Programmers can handle standard exceptions using various techniques like Try/catch, Multiple catch blocks, Finally, and others depending upon the requirement of scripts</li>\n                    <li>For analyzing the exceptions in detail, one can also use methods like printStackTrace(), toString(), and getMessage()</li>\n                  </ul>\n                </div>\n                <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n\n            </Cell>\n              {/* <Cell className='page-tab-second-col' col={2}>\n                <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n              </Cell> */}\n          </Grid>\n        </div>\n    );\n  }   \nexport default selenium;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resProtractor = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAppium-'>\n                        <h1>Working in progress...</h1>\n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resProtractor;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resWebIo = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAppium-'>\n                        <h1>Working in progress...</h1>\n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resWebIo;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resAppium = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAppium-'>\n                        <h1>Working in progress...</h1> \n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resAppium;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst resRestassured = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resAppium-'>\n                        <h1>Working in progress...</h1>\n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resRestassured;","import React from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport GoogleAd from '../../../components/GoogleAd';\n\nconst link = 'https://swagger.io/';\n\nconst resLinks = () => {\n    return(\n        <div className='page-tab-body'>\n            <Grid className='page-tab-grid'>\n                <Cell className='page-tab-first-col' col={12}>\n                    <div className='resLinks-'>\n                        <a href={link}>Resource Coming Soon!</a>;\n                    </div>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell>\n                {/* <Cell className='page-tab-second-col' col={2}>\n                    <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                </Cell> */}\n            </Grid>\n        </div>\n    )\n}\nexport default resLinks;","import React, {Component} from 'react';\nimport { Tabs, Tab } from 'react-mdl';\nimport HeaderText from '../components/header';\nimport ResManual from '../components/resources/tabs/resManual';\nimport ResLinux from '../components/resources/tabs/resLinux';\nimport ResSql from '../components/resources/tabs/resSql';\nimport ResNetwork from '../components/resources/tabs/resNetwork';\nimport ResHtml from '../components/resources/tabs/resHtml';\nimport ResCss from '../components/resources/tabs/resCss';\nimport ResJavascript from '../components/resources/tabs/resJavascript';\nimport ResJava from '../components/resources/tabs/resJava';\nimport ResSelenium from '../components/resources/tabs/resSelenium';\nimport ResProtractor from '../components/resources/tabs/resProtractor';\nimport ResWebIo from '../components/resources/tabs/resWebIo';\nimport ResAppium from '../components/resources/tabs/resAppium';\nimport ResRestassured from '../components/resources/tabs/resRestassured';\n// import ResSuperTest from '../components/resources/tabs/resSuperTest';\n// import ResReact from '../components/resources/tabs/resReact';\n// import ResFrisby from '../components/resources/tabs/resFrisby';\nimport Links from '../components/resources/tabs/resLinks';\n\nclass resources extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { activeTab: 0 };\n    }\n\n    toggleCategories() {\n\n        if(this.state.activeTab === 0) {\n            return(\n                <ResNetwork />\n            )\n        } else if(this.state.activeTab === 1) {\n            return(\n                <ResSql />\n            )\n        } else if(this.state.activeTab === 2) {\n            return(\n                <ResManual />\n            )\n        } else if(this.state.activeTab === 3) {\n            return(\n                <ResLinux />\n            )\n        } else if(this.state.activeTab === 4) {\n            return(\n                <ResHtml />\n            )\n        } else if(this.state.activeTab === 5) {\n            return(\n                <ResCss />\n            )\n        } else if(this.state.activeTab === 6) {\n            return(\n                <ResJavascript />\n            )\n        } else if(this.state.activeTab === 7) {\n            return(\n                <ResJava />\n            )\n        } else if(this.state.activeTab === 8) {\n            return(\n                <ResSelenium />\n            )\n        } else if(this.state.activeTab === 9) {\n            return(\n                <Links />\n            )\n        } else if(this.state.activeTab === 10) {\n            return(\n                <ResProtractor />\n            )\n        } else if(this.state.activeTab === 11) {\n            return(\n                <ResWebIo />\n            )\n        } else if(this.state.activeTab === 12) {\n            return(\n                <ResAppium />\n            )\n        } else if(this.state.activeTab === 13) {\n            return(\n                <ResRestassured />\n            )\n        // } else if(this.state.activeTab === 14) {\n        //     return(\n        //         <ResSuperTest />\n        //     )\n        // } else if(this.state.activeTab === 15) {\n        //     return(\n        //         <ResReact />\n        //     )\n        // } else if(this.state.activeTab === 16) {\n        //     return(\n        //         <ResFrisby />\n        //     )\n         }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"category-tabs\">\n                <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({ activeTab: tabId })} ripple>\n                <Tab>Networking</Tab>\n                <Tab>SQL</Tab>\n                <Tab>Manual</Tab>\n                <Tab>Linux</Tab>\n                <Tab>HTML</Tab>\n                <Tab>CSS</Tab>\n                <Tab>Javascript</Tab>\n                <Tab>Java</Tab>\n                <Tab>Selenium</Tab>\n                <Tab>Links</Tab>\n                <Tab>Protractor</Tab>\n                <Tab>WebDriverIO</Tab>\n                <Tab>Appium</Tab>\n                <Tab>RestAssured</Tab>\n                {/* <Tab>SuperTest</Tab>\n                <Tab>FrisbyJS</Tab>\n                <Tab>ReactJS</Tab> */}\n                </Tabs>\n                <HeaderText /> \n                <section>\n                    <div className=\"content\">{this.toggleCategories()}</div>\n                </section>\n            </div>    \n        );\n    }\n}\nexport default resources;\n","export default __webpack_public_path__ + \"static/media/about-pic.f77d187b.png\";","import React, {Component} from 'react';\nimport '../style/about.css';\nimport HeaderText from '../components/header';\nimport { Grid, Cell } from 'react-mdl';\nimport aboutPic from '../images/about-pic.png';\nimport SocialIcon from '../components/socialIcon';\nimport GoogleAd from '../components/GoogleAd';\n\nclass About extends Component {\n    render(){\n        return(\n            <div className='page-tab-body'>\n                <HeaderText />\n                <Grid className='page-tab-grid'>\n                    {/* <Cell className='menu' col={2} >\n                    </Cell> */}\n                    <Cell className='page-tab-first-col'col={12}>\n                        <div className='training-title'>\n                            <h2>WHO WE ARE</h2>\n                            <h4>\n                                INPERSON & ONLINE <br />\n                                Interactive & Innovative Trainig Center for <br />\n                                Code4Kids | WebDevelopment | Full Stack SQA Courses\n                            </h4>\n                            <p id='training-description'>\n                                We are the leaders in providing quality training's of \n                                Code4Kids (5th Grade to 12th Gade) Web|UI|Frontend Development\n                                and Full Stack SQA Courses Training to Corporate and Individuals. \n                                This is the best In-person \n                                and Online training center at Hollis, Queens-NY. Our main intention \n                                is to let our students learn through the Interactive process, practice and provide as \n                                much detailed information as possible. Our training's are divided \n                                in three modules - Code4Kids, Web|UI|Frontend Development and Full Stack SQA Courses.\n                            </p>\n                            <hr />\n                        </div>\n                        <div className='about-instructor'>\n                            <h3>SHAHNEWAZ</h3>\n                            <img className='about-section-img' src={aboutPic} alt='avatar'/>\n                        </div>\n                        <div className='instructor-details-first'>\n                            <p>\n                                I’m Md Shahnewaz Zaman(Shanto) and I’m Head of SQA at Raytheon Technology.\n                            </p>\n                            <p>\n                                I got over 12 years of diverse industry experience. I am Certified \n                                SAFe4Agilist and an expert in creating automation \n                                solutions and frameworks for large scale complex digital functions. \n                                Expert in automation across tech stacks (HTML, CSS, Javascript, Java, Selenium, Protractor, \n                                WebDriverIO, Appium, API's) and on \n                                different channels (Web, APIs & Mobile apps).\n                            </p>\n                        </div>\n                        <div className='instructor-details-second'>\n                            <p>\n                                In my current role, as Head of SQA, I am responsible to build, \n                                design, implement and maintain the automation framework and integrate it with \n                                CI/CD pipeline. I am also responsible for bringing in the best industry practices \n                                for SQA practices, coding standards, extensible framework design, and low maintenance automation \n                                solutions. I enabled product owners and Agile teams to adopt Best practices & process in their projects \n                                andd establish SQA first approach. I take immense pride in cultivating a culture \n                                of individual & company growth and actively mentor my team to maximize their potential.\n                            </p>\n                            <p>\n                                I am also the Founder of IT Training & Consultant Inc., Over the years I have trained hundreds \n                                of SQA folks to make a successful transition to automation. I am actively involved in mentoring \n                                entry-level professionals and fresher to make a successful career in Tech Engineering industry.\n                            </p>\n                            <p>\n                                I live in Hollis, Queens-NY, with my wife and lovely son & daughter. \n                                Please connect me through the social media below.\n                            </p>\n                            <SocialIcon />\n                            <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                        </div>\n                    </Cell>\n                    {/* <Cell className='page-tab-second-col' col={2}>\n                        <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                    </Cell> */}\n                </Grid>\n            </div> \n        );\n    }\n}\nexport default About;\n","import React, {Component} from 'react';\nimport HeaderText from '../components/header';\nimport { Grid, Cell, Button } from 'react-mdl';\nimport GoogleAd from '../components/GoogleAd';\nimport '../style/contact.css';\n\nclass Contact extends Component {\n    \n    render(){\n        return(\n            <div className='page-tab-body'>\n                <Grid className='page-tab-grid'>\n                    <Cell className='page-tab-first-col' col={12}>\n                        <div className='contact-'>\n                            <HeaderText />\n                            <div className='contact-section-1'>\n                                <h3>Contact us</h3>\n                                <p>\n                                    Do you have any question? Please do not hesitate to contact us directly. \n                                    Our team will come back to you within a matter of hours to help you.\n                                </p>\n                                <p id='contact-interested'>\n                                    <strong>Interested in learing at IT Training & Consultant Inc.?</strong>\n                                    <br />\n                                    <a href='https://www.onetechi.com'>\n                                        Visit our program site for more information\n                                    </a>\n                                </p>\n                            </div>\n                            <div className='contact-btn'>\n                                <Button raised>\n                                    <a href='https://msz5213.github.io/student-subscription/'>\n                                        Get in Touch With Us\n                                    </a>\n                                </Button>\n                            </div>\n                        </div>\n                        <GoogleAd slot=\"1541085932\" classNames=\"page-right-side\" />\n                    </Cell>\n                    {/* <Cell className='page-tab-second-col' col={2}>\n                        \n                    </Cell> */}\n            </Grid>\n            </div>\n        );\n    }\n}\nexport default Contact;\n","import React from 'react';\n\nconst pracCode4Kids = () => {\n    return(\n        <div className='code4Kids-body'>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n            <h1>We are in code4kids</h1>\n        </div>\n\n    )\n}\nexport default pracCode4Kids;","import React from 'react';\n\nconst pracWebDevelopment = () => {\n    return(\n        <div className='webDevelopment-body'>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n            <h1>We are in Web Development</h1>\n        </div>\n\n    )\n}\nexport default pracWebDevelopment;","import React from 'react';\nimport '../module/dtd.css';\n\nconst dtd = () => {\n    return(\n        <div>\n            <form>\n                <fieldset>\n                    <h5>Sign up Form</h5>\n\n                    <label>\n                        <div className='first-name'>\n                            First Name:\n                            <input type='text' placeholder=\"firstname\" />\n                        </div>\n                        <div className='last-name'>\n                        Last Name:\n                            <input type='text' placeholder=\"lastname\" />\n                        </div>\n                        <div className='email-phone-number'>\n                            Email/Phone Number:\n                            <input type='email' placeholder=\"email/phone number\" />\n                        </div>\n                        <div className='password'>\n                        Password:\n                            <input type='password' placeholder=\"password\" />\n                        </div>\n                        <div className='birthday'>\n                            Birthday:\n                            <select className='month'>\n                                <option>----</option>\n                                <option>Janruary</option>\n                                <option>Fabruary</option>\n                                <option>March</option>\n                                <option>April</option>\n                                <option>May</option>\n                                <option>June</option>\n                                <option>July</option>\n                                <option>August</option>\n                                <option>September</option>\n                                <option>October</option>\n                                <option>November</option>\n                                <option>December</option>\n                            </select>\n                            Day:\n                            <select className='day'>\n                                <option>----</option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                                <option>6</option>\n                                <option>7</option>\n                                <option>8</option>\n                                <option>9</option>\n                                <option>10</option>\n                                <option>11</option>\n                                <option>12</option>\n                            </select>\n                            Year:\n                            <select className='year'>\n                                <option>----</option>\n                                <option>2018</option>\n                                <option>2019</option>\n                                <option>2020</option>\n                                <option>2020</option>\n                                <option>2020</option>\n                                <option>2020</option>\n                                <option>2020</option>\n                                <option>8</option>\n                                <option>9</option>\n                                <option>10</option>\n                                <option>11</option>\n                                <option>12</option>\n                            </select>\n                        </div>\n\n                        <div className='gender'>\n                            Gender:\n                            <div>\n                                Female: \n                                <input className='female' type='radio'  />\n                                Male:\n                                <input className='male' type='radio'  />\n                                Custom:\n                                <input className='custom' type='radio'  />\n                            </div>\n                        </div>\n                        \n                        <div class=\"para\">\n                            <p>\n                                By clicking Sign Up, you agree to our Terms, Data Policy and Cookies Policy. You may receive SMS Notifications from us and can opt out any time\n                            </p>\n                        </div>\n  \n                        <div class=\"signup-btn\"> \n                            <input class='button' type='Submit' value='Sign Up'  />\n                        </div>\n                    </label>\n                </fieldset>\n            </form>\n        </div>\n    );\n  }   \nexport default dtd;\n","import React from 'react';\nimport Practice from '../../module/dtd';\n\nconst pracAutomationTest = () => {\n    return(\n        <div className='automationTest-body'>\n            <Practice />\n        </div>\n\n    )\n}\nexport default pracAutomationTest;","import React from 'react';\n\nconst pracManualTest = () => {\n    return(\n        <div className='manualTest-body'>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n            <h1>We are in manual</h1>\n        </div>\n\n    )\n}\nexport default pracManualTest;","import React, {Component} from 'react';\nimport { Tabs, Tab } from 'react-mdl';\nimport HeaderText from '../components/header';\nimport PracCode4Kids from '../components/practice/tabs/pracCode4Kids';\nimport PracWebDevelopment from '../components/practice/tabs/pracWebDevelopment';\nimport PracAutomationTest from '../components/practice/tabs/pracAutomationTest';\nimport PracManualTest from '../components/practice/tabs/pracManualTest';\n\nclass practice extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { activeTab: 0 };\n    }\n\n    toggleCategories() {\n\n        if(this.state.activeTab === 0) {\n            return(\n                <PracCode4Kids />\n            )\n        } else if(this.state.activeTab === 1) {\n            return(\n                <PracWebDevelopment />\n            )\n        } else if(this.state.activeTab === 2) {\n            return(\n                <PracAutomationTest />\n            )\n        } else if(this.state.activeTab === 3) {\n            return(\n                <PracManualTest />\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"category-tabs\">\n                <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({ activeTab: tabId })} ripple>\n                    <Tab>Code4Kids</Tab>\n                    <Tab>WebDevelopment</Tab>\n                    <Tab>AutomationTest</Tab>\n                    <Tab>ManualTest</Tab>\n                </Tabs>\n                <HeaderText /> \n                <section>\n                    <div className=\"content\">{this.toggleCategories()}</div>\n                </section>\n            </div>    \n        );\n    }\n}\nexport default practice;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Landing from '../pages/landing';\nimport Courses from '../pages/courses';\nimport Code4Kids from '../pages/code4Kids';\nimport Resources from '../pages/resources';\nimport About from '../pages/about';\nimport Contact from '../pages/contact';\nimport Practice from '../pages/practice';\n\nconst Main = () => (\n    <Switch>\n        <Route exact path='/' component={Landing} />\n        <Route exact path='/courses' component={Courses} />\n        <Route exact path='/code4Kids' component={Code4Kids} />\n        <Route exact path='/resources' component={Resources} />\n        <Route exact path='/about' component={About} />\n        <Route exact path='/contact' component={Contact} />\n        <Route exact path='/practice' component={Practice} />\n    </Switch>\n    \n);\nexport default Main; ","import React, {Component} from 'react';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport './App.css';\nimport Main from './components/main';\nimport {Link } from 'react-router-dom';\n\nconst COURSES = '/courses/';\nconst CODE4KIDS = '/code4Kids/';\nconst RESOURCES = '/resources/';\nconst PRACTICE = '/practice/';\nconst ABOUT = '/about/';\nconst CONTACT = '/contact/';\n\n\nclass App extends Component {\n  render(){\n    return (\n      <div>\n        <Layout fixedHeader>\n          <Header className='header-color sticky' title={<h2><strong>ITTCI</strong></h2>} scroll>\n            <Navigation className='top-link'>\n              <Link to='/'>Home</Link>\n              <Link to='/courses'>Courses</Link>\n              <Link to='/code4Kids'>Code4Kids</Link>\n              <Link to='/resources'>Resources</Link>\n              <Link to='/practice'>Practice</Link>\n\n              {/* <Link to='/'>Home</Link>\n              <a href={COURSES} target=\"_blank\" rel=\"noopener noreferrer\">Courses</a>\n              <a href={CODE4KIDS} target=\"_blank\" rel=\"noopener noreferrer\">Code4Kids</a>\n              <a href={RESOURCES} target=\"_blank\" rel=\"noopener noreferrer\">Resources</a>\n              <a href={PRACTICE} target=\"_blank\" rel=\"noopener noreferrer\">Practice</a>  */}\n            </Navigation>\n          </Header>\n          <Drawer className='side-header-color' title= {<h2><strong>ITTCI</strong></h2>} >\n            <Navigation className='side-link'>\n              {/* <Link to='/'>Home</Link>\n              <Link to='/courses'>Courses</Link>\n              <Link to='/code4Kids'>Code4Kids</Link>\n              <Link to='/resources'>Resources</Link>\n              <Link to='/practice'>Practice</Link>\n              <Link to='/about'>About</Link>\n              <Link to='/contact'>Contact</Link>  */}\n\n              <Link to='/'>Home</Link>\n              <a href={COURSES} target=\"_blank\" rel=\"noopener noreferrer\">Courses</a>\n              <a href={CODE4KIDS} target=\"_blank\" rel=\"noopener noreferrer\">Code4Kids</a>\n              <a href={RESOURCES} target=\"_blank\" rel=\"noopener noreferrer\">Resources</a>\n              <a href={PRACTICE} target=\"_blank\" rel=\"noopener noreferrer\">Practice</a> \n              <a href={ABOUT} target=\"_blank\" rel=\"noopener noreferrer\">About</a>\n              <a href={CONTACT} target=\"_blank\" rel=\"noopener noreferrer\">Contact</a>\n            </Navigation>\n          </Drawer>\n          <Content>\n            <div className='page-content' />\n            <Main />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}